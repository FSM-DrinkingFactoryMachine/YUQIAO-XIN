package fr.univcotedazur.polytech.si4.fsm.project;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Hashtable;
import java.util.HashMap;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JSeparator;
import javax.swing.JSlider;
import javax.swing.SwingConstants;
import javax.swing.border.BevelBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.*;
import fr.univcotedazur.polytech.si4.fsm.project.drinkfactorymachine.DrinkFactoryMachineStatemachine;
import fr.univcotedazur.polytech.si4.fsm.project.drinkfactorymachine.IDrinkFactoryMachineStatemachine.SCInterfaceListener;





class DrinkFactoryMachineImplementation implements SCInterfaceListener {
	DrinkFactoryMachine theMachine;
	public DrinkFactoryMachineImplementation(DrinkFactoryMachine dfm) {
    	theMachine = dfm; 
    }

	@Override
	public void onDoResetRaised() {
		// TODO Auto-generated method stub
		
		theMachine.drinkType="";
		theMachine.nfcInfo="";
		theMachine.pay=0;
		theMachine.sugarSlider.setValue(1);
		theMachine.sizeSlider.setValue(1);
		theMachine.temperatureSlider.setValue(2);
		theMachine.progressBar.setValue(0);
		theMachine.theFSM.setPay(0);
		theMachine.theFSM.setPrice(0);
		
		
		
	}




	@Override
	public void onDoPrepareRaised() {
		// TODO Auto-generated method stub
		
	}



	@Override
	public void onDoCaculateRaised() {
		// TODO Auto-generated method stub
		theMachine.theFSM.setPay(theMachine.pay);
	}

	@Override
	public void onDoChangeTypeRaised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoModify1Raised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoModify2Raised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoModify3Raised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoStoreInfoRaised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoChangePriceRaised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoRefundRaised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoShowPricePayRaised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoShowTimeRaised() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onDoResetTimeRaised() {
		// TODO Auto-generated method stub
		
	}



	
}

public class DrinkFactoryMachine extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2030629304432075314L;
	private JPanel contentPane;
	protected JLabel messagesToUser, lblCoins, lblSugar, lblSize, lblNfc, labelForPictures, lblTemperature;
	protected JSlider sugarSlider, sizeSlider, temperatureSlider;
	protected JButton coffeeButton, expressoButton, teaButton, soupButton, icedTeaButton, money50centsButton,
						money25centsButton, money10centsButton, nfcBiiiipButton, addCupButton, cancelButton;
	protected String drinkType = "",nfcInfo="";
	protected int currentProgress=0;
	protected JProgressBar progressBar;
	protected double pay = 0.0;
	private HashMap<String,Double> prices = new HashMap<String,Double>();
	protected DrinkFactoryMachineStatemachine theFSM;
	
	/**
	 * @wbp.nonvisual location=311,475
	 */
	private final ImageIcon imageIcon = new ImageIcon();

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DrinkFactoryMachine frame = new DrinkFactoryMachine();
					frame.setVisible(true);
					frame.setLocationRelativeTo(null);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	public double getPrice(String type) {
		if(prices.containsKey(type))
			return prices.get(type);
		return 0;
	}
	/**
	 * Create the frame.
	 */
	public DrinkFactoryMachine() {
		theFSM = new DrinkFactoryMachineStatemachine();
		TimerService timer = new TimerService();
		theFSM.setTimer(timer);
	    theFSM.init();
	    theFSM.enter();
		theFSM.getSCInterface().getListeners().add(
                new DrinkFactoryMachineImplementation(this)
				);
		
		prices.put("Coffee", 0.5);
		prices.put("Tea", 0.5);
		prices.put("Expresso", 0.5);
		prices.put("Soup", 0.5);
		prices.put("Iced Tea", 1.0);
		
		setForeground(Color.DARK_GRAY);
		setFont(new Font("Cantarell", Font.BOLD, 22));
		setBackground(Color.DARK_GRAY);
		setTitle("Drinking Factory Machine");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 650, 650);
		contentPane = new JPanel();
		contentPane.setBackground(Color.DARK_GRAY);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		messagesToUser = new JLabel("<html>This is<br>place to communicate <br> with the user");
		messagesToUser.setForeground(Color.white);
		messagesToUser.setHorizontalAlignment(SwingConstants.LEFT);
		messagesToUser.setVerticalAlignment(SwingConstants.TOP);
		messagesToUser.setToolTipText("message to the user");
		messagesToUser.setBackground(Color.white);
		messagesToUser.setBounds(126, 34, 165, 175);
		contentPane.add(messagesToUser);

		lblCoins = new JLabel("Coins");
		lblCoins.setForeground(Color.white);
		lblCoins.setHorizontalAlignment(SwingConstants.CENTER);
		lblCoins.setBounds(538, 12, 44, 15);
		contentPane.add(lblCoins);

		coffeeButton = new JButton("Coffee");
		coffeeButton.setForeground(Color.DARK_GRAY);
		coffeeButton.setBackground(Color.white);
		coffeeButton.setBounds(12, 34, 96, 25);
		contentPane.add(coffeeButton);
		coffeeButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				theFSM.raiseType1_btn();
				drinkType = "Coffee";	
			}
		});
		
		

		expressoButton = new JButton("Expresso");
		expressoButton.setForeground(Color.DARK_GRAY);
		expressoButton.setBackground(Color.white);
		expressoButton.setBounds(12, 71, 96, 25);
		contentPane.add(expressoButton);
		expressoButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				theFSM.raiseType1_btn();
				drinkType = "Expresso";	
			}
		});

		teaButton = new JButton("Tea");
		teaButton.setForeground(Color.DARK_GRAY);
		teaButton.setBackground(Color.white);
		teaButton.setBounds(12, 108, 96, 25);
		contentPane.add(teaButton);
		teaButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				theFSM.raiseType1_btn();
				drinkType = "Tea";	
			}
		});
		
		

		soupButton = new JButton("Soup");
		soupButton.setForeground(Color.DARK_GRAY);
		soupButton.setBackground(Color.white);
		soupButton.setBounds(12, 145, 96, 25);
		contentPane.add(soupButton);
		soupButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				theFSM.raiseType2_btn();
				drinkType = "Soup";	
			}
		});
		icedTeaButton = new JButton("Iced Tea");
		icedTeaButton.setForeground(Color.DARK_GRAY);
		icedTeaButton.setBackground(Color.white);
		icedTeaButton.setBounds(12, 182, 96, 25);
		contentPane.add(icedTeaButton);
		icedTeaButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				theFSM.raiseType1_btn();
				drinkType = "Icde Tea";	
			}
		});

		progressBar = new JProgressBar();
		progressBar.setStringPainted(true);
		progressBar.setValue(0);
		progressBar.setForeground(Color.LIGHT_GRAY);
		progressBar.setBackground(Color.white);
		progressBar.setBounds(12, 254, 622, 26);
		contentPane.add(progressBar);
		ActionListener every5=new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(currentProgress<100)
                    currentProgress++;
                progressBar.setValue(currentProgress);
            }
        };
        Timer timer1=new Timer(100,every5);
        timer1.start();
        if(currentProgress==100)
            timer1.stop();

		sugarSlider = new JSlider();
		sugarSlider.setValue(1);
		sugarSlider.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
		sugarSlider.setBackground(Color.DARK_GRAY);
		sugarSlider.setForeground(Color.white);
		sugarSlider.setPaintTicks(true);
		sugarSlider.setMinorTickSpacing(1);
		sugarSlider.setMajorTickSpacing(1);
		sugarSlider.setMaximum(4);
		sugarSlider.setBounds(301, 51, 200, 36);
		contentPane.add(sugarSlider);

		sizeSlider = new JSlider();
		sizeSlider.setPaintTicks(true);
		sizeSlider.setValue(1);
		sizeSlider.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
		sizeSlider.setBackground(Color.DARK_GRAY);
		sizeSlider.setForeground(Color.white);
		sizeSlider.setMinorTickSpacing(1);
		sizeSlider.setMaximum(2);
		sizeSlider.setMajorTickSpacing(1);
		sizeSlider.setBounds(301, 125, 200, 36);
		contentPane.add(sizeSlider);

		temperatureSlider = new JSlider();
		temperatureSlider.setPaintLabels(true);
		temperatureSlider.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
		temperatureSlider.setValue(2);
		temperatureSlider.setBackground(Color.DARK_GRAY);
		temperatureSlider.setForeground(Color.white);
		temperatureSlider.setPaintTicks(true);
		temperatureSlider.setMajorTickSpacing(1);
		temperatureSlider.setMaximum(3);
		temperatureSlider.setBounds(301, 188, 200, 54);

		Hashtable<Integer, JLabel> temperatureTable = new Hashtable<Integer, JLabel>();
		temperatureTable.put(0, new JLabel("20°C"));
		temperatureTable.put(1, new JLabel("35°C"));
		temperatureTable.put(2, new JLabel("60°C"));
		temperatureTable.put(3, new JLabel("85°C"));
		for (JLabel l : temperatureTable.values()) {
			l.setForeground(Color.white);
		}
		temperatureSlider.setLabelTable(temperatureTable);

		contentPane.add(temperatureSlider);

		

		lblSugar = new JLabel("Sugar");
		lblSugar.setForeground(Color.white);
		lblSugar.setBackground(Color.white);
		lblSugar.setHorizontalAlignment(SwingConstants.CENTER);
		lblSugar.setBounds(380, 34, 44, 15);
		contentPane.add(lblSugar);

		lblSize = new JLabel("Size");
		lblSize.setForeground(Color.white);
		lblSize.setBackground(Color.white);
		lblSize.setHorizontalAlignment(SwingConstants.CENTER);
		lblSize.setBounds(380, 113, 44, 15);
		contentPane.add(lblSize);
		

		lblTemperature = new JLabel("Temperature");
		lblTemperature.setForeground(Color.white);
		lblTemperature.setBackground(Color.white);
		lblTemperature.setHorizontalAlignment(SwingConstants.CENTER);
		lblTemperature.setBounds(363, 173, 96, 15);
		contentPane.add(lblTemperature);

		JPanel panel = new JPanel();
		panel.setBackground(Color.DARK_GRAY);
		lblCoins.setLabelFor(panel);
		panel.setBounds(538, 25, 96, 97);
		contentPane.add(panel);

		money50centsButton = new JButton("0.50 €");
		money50centsButton.setForeground(Color.DARK_GRAY);
		money50centsButton.setBackground(Color.white);
		panel.add(money50centsButton);
		money50centsButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				pay+=0.5;
				theFSM.raisePay_coins();
			}
		});

		money25centsButton = new JButton("0.25 €");
		money25centsButton.setForeground(Color.DARK_GRAY);
		money25centsButton.setBackground(Color.white);
		panel.add(money25centsButton);
		money25centsButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				pay+=0.25;
				theFSM.raisePay_coins();
			}
		});
		
		money10centsButton = new JButton("0.10 €");
		money10centsButton.setForeground(Color.DARK_GRAY);
		money10centsButton.setBackground(Color.white);
		panel.add(money10centsButton);
		money10centsButton.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				pay+=0.1;
				theFSM.raisePay_coins();
			}
		});
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(Color.DARK_GRAY);
		panel_1.setBounds(538, 154, 96, 40);
		contentPane.add(panel_1);

		nfcBiiiipButton = new JButton("biiip");
		nfcBiiiipButton.setForeground(Color.DARK_GRAY);
		nfcBiiiipButton.setBackground(Color.white);
		panel_1.add(nfcBiiiipButton);

		lblNfc = new JLabel("NFC");
		lblNfc.setForeground(Color.white);
		lblNfc.setHorizontalAlignment(SwingConstants.CENTER);
		lblNfc.setBounds(541, 139, 41, 15);
		contentPane.add(lblNfc);

		JSeparator separator = new JSeparator();
		separator.setBounds(12, 292, 622, 15);
		contentPane.add(separator);

		addCupButton = new JButton("Add cup");
		addCupButton.setForeground(Color.DARK_GRAY);
		addCupButton.setBackground(Color.white);
		addCupButton.setBounds(45, 336, 96, 25);
		contentPane.add(addCupButton);

		BufferedImage myPicture = null;
		try {
			myPicture = ImageIO.read(new File("./picts/vide2.jpg"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		labelForPictures = new JLabel(new ImageIcon(myPicture));
		labelForPictures.setBounds(175, 319, 286, 260);
		contentPane.add(labelForPictures);

		JPanel panel_2 = new JPanel();
		panel_2.setBackground(Color.DARK_GRAY);
		panel_2.setBounds(538, 217, 96, 33);
		contentPane.add(panel_2);

		cancelButton = new JButton("Cancel");
		cancelButton.setForeground(Color.DARK_GRAY);
		cancelButton.setBackground(Color.white);
		panel_2.add(cancelButton);

		// listeners
		addCupButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				BufferedImage myPicture = null;
				try {
					myPicture = ImageIO.read(new File("./picts/ownCup.jpg"));
				} catch (IOException ee) {
					ee.printStackTrace();
				}
				labelForPictures.setIcon(new ImageIcon(myPicture));
			}
		});

	}
}
