/** Generated by YAKINDU Statechart Tools code generator. */
package fr.univcotedazur.polytech.si4.fsm.project.drinkfactorymachine;

import fr.univcotedazur.polytech.si4.fsm.project.ITimer;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class DrinkFactoryMachineStatemachine implements IDrinkFactoryMachineStatemachine {
	protected class SCInterfaceImpl implements SCInterface {
	
		private List<SCInterfaceListener> listeners = new LinkedList<SCInterfaceListener>();
		
		public List<SCInterfaceListener> getListeners() {
			return listeners;
		}
		private boolean type1_btn;
		
		
		public void raiseType1_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							type1_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean type2_btn;
		
		
		public void raiseType2_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							type2_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean type3_btn;
		
		
		public void raiseType3_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							type3_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean sli1_btn;
		
		
		public void raiseSli1_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							sli1_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean sli2_btn;
		
		
		public void raiseSli2_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							sli2_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean sli3_btn;
		
		
		public void raiseSli3_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							sli3_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pay_coins;
		
		
		public void raisePay_coins() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pay_coins = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean nfc_btn;
		
		
		public void raiseNfc_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							nfc_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean cancle_btn;
		
		
		public void raiseCancle_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							cancle_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean addCup_Btn;
		
		
		public void raiseAddCup_Btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							addCup_Btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean doReset;
		
		
		public boolean isRaisedDoReset() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doReset;
			}
		}
		
		protected void raiseDoReset() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doReset = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoResetRaised();
				}
			}
		}
		
		private boolean doPrepare;
		
		
		public boolean isRaisedDoPrepare() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doPrepare;
			}
		}
		
		protected void raiseDoPrepare() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doPrepare = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoPrepareRaised();
				}
			}
		}
		
		private boolean doCaculate;
		
		
		public boolean isRaisedDoCaculate() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doCaculate;
			}
		}
		
		protected void raiseDoCaculate() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doCaculate = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoCaculateRaised();
				}
			}
		}
		
		private boolean doChangeType;
		
		
		public boolean isRaisedDoChangeType() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeType;
			}
		}
		
		protected void raiseDoChangeType() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeType = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeTypeRaised();
				}
			}
		}
		
		private boolean doModify1;
		
		
		public boolean isRaisedDoModify1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doModify1;
			}
		}
		
		protected void raiseDoModify1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doModify1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoModify1Raised();
				}
			}
		}
		
		private boolean doModify2;
		
		
		public boolean isRaisedDoModify2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doModify2;
			}
		}
		
		protected void raiseDoModify2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doModify2 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoModify2Raised();
				}
			}
		}
		
		private boolean doModify3;
		
		
		public boolean isRaisedDoModify3() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doModify3;
			}
		}
		
		protected void raiseDoModify3() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doModify3 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoModify3Raised();
				}
			}
		}
		
		private boolean doStoreInfo;
		
		
		public boolean isRaisedDoStoreInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doStoreInfo;
			}
		}
		
		protected void raiseDoStoreInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doStoreInfo = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoStoreInfoRaised();
				}
			}
		}
		
		private boolean doChangePrice;
		
		
		public boolean isRaisedDoChangePrice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangePrice;
			}
		}
		
		protected void raiseDoChangePrice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangePrice = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangePriceRaised();
				}
			}
		}
		
		private boolean doRefund;
		
		
		public boolean isRaisedDoRefund() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doRefund;
			}
		}
		
		protected void raiseDoRefund() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doRefund = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoRefundRaised();
				}
			}
		}
		
		private boolean doShowPricePay;
		
		
		public boolean isRaisedDoShowPricePay() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doShowPricePay;
			}
		}
		
		protected void raiseDoShowPricePay() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doShowPricePay = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoShowPricePayRaised();
				}
			}
		}
		
		private boolean doShowTime;
		
		
		public boolean isRaisedDoShowTime() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doShowTime;
			}
		}
		
		protected void raiseDoShowTime() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doShowTime = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoShowTimeRaised();
				}
			}
		}
		
		private boolean doResetTime;
		
		
		public boolean isRaisedDoResetTime() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doResetTime;
			}
		}
		
		protected void raiseDoResetTime() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doResetTime = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoResetTimeRaised();
				}
			}
		}
		
		private boolean doChangeToSoup;
		
		
		public boolean isRaisedDoChangeToSoup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeToSoup;
			}
		}
		
		protected void raiseDoChangeToSoup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeToSoup = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeToSoupRaised();
				}
			}
		}
		
		private boolean doChangeToIcedTea;
		
		
		public boolean isRaisedDoChangeToIcedTea() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeToIcedTea;
			}
		}
		
		protected void raiseDoChangeToIcedTea() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeToIcedTea = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeToIcedTeaRaised();
				}
			}
		}
		
		private double pay;
		
		public synchronized double getPay() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return pay;
			}
		}
		
		public void setPay(double value) {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				this.pay = value;
			}
		}
		
		private double price;
		
		public synchronized double getPrice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return price;
			}
		}
		
		public void setPrice(double value) {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				this.price = value;
			}
		}
		
		private boolean isBiip;
		
		public synchronized boolean getIsBiip() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return isBiip;
			}
		}
		
		public void setIsBiip(boolean value) {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				this.isBiip = value;
			}
		}
		
		protected void clearEvents() {
			type1_btn = false;
			type2_btn = false;
			type3_btn = false;
			sli1_btn = false;
			sli2_btn = false;
			sli3_btn = false;
			pay_coins = false;
			nfc_btn = false;
			cancle_btn = false;
			addCup_Btn = false;
		}
		protected void clearOutEvents() {
		
		doReset = false;
		doPrepare = false;
		doCaculate = false;
		doChangeType = false;
		doModify1 = false;
		doModify2 = false;
		doModify3 = false;
		doStoreInfo = false;
		doChangePrice = false;
		doRefund = false;
		doShowPricePay = false;
		doShowTime = false;
		doResetTime = false;
		doChangeToSoup = false;
		doChangeToIcedTea = false;
		}
		
	}
	
	
	protected SCInterfaceImpl sCInterface;
	
	private boolean initialized = false;
	
	public enum State {
		main_region_state_initial,
		main_region_state_1,
		main_region_state_1_r1_state_type,
		main_region_state_1_r1_changePrice,
		main_region_state_1_r2_state_sli1,
		main_region_state_1_r3_state_sli2,
		main_region_state_1_r4_state_sli3,
		main_region_state_1_r5_state_nfc,
		main_region_state_1_r6_state_caculate,
		main_region_state_1_r7_state_addCup,
		main_region_state_1_r8_state_timer,
		main_region_state_refund1,
		main_region_state_prepare,
		main_region_state_refund2,
		$NullState$
	};
	
	private final State[] stateVector = new State[8];
	
	private int nextStateIndex;
	
	private ITimer timer;
	
	private final boolean[] timeEvents = new boolean[8];
	
	private BlockingQueue<Runnable> inEventQueue = new LinkedBlockingQueue<Runnable>();
	private boolean isRunningCycle = false;
	public DrinkFactoryMachineStatemachine() {
		sCInterface = new SCInterfaceImpl();
	}
	
	public synchronized void init() {
		this.initialized = true;
		if (timer == null) {
			throw new IllegalStateException("timer not set.");
		}
		for (int i = 0; i < 8; i++) {
			stateVector[i] = State.$NullState$;
		}
		clearEvents();
		clearOutEvents();
		sCInterface.setPay(0);
		
		sCInterface.setPrice(0);
		
		sCInterface.setIsBiip(false);
	}
	
	public synchronized void enter() {
		if (!initialized) {
			throw new IllegalStateException(
				"The state machine needs to be initialized first by calling the init() function."
			);
		}
		if (timer == null) {
			throw new IllegalStateException("timer not set.");
		}
		enterSequence_main_region_default();
	}
	
	public synchronized void runCycle() {
		if (!initialized)
			throw new IllegalStateException(
					"The state machine needs to be initialized first by calling the init() function.");
		
		if (isRunningCycle) {
			return;
		}
		isRunningCycle = true;
		
		clearOutEvents();
	
		Runnable task = getNextEvent();
		if (task == null) {
			task = getDefaultEvent();
		}
		
		while (task != null) {
			task.run();
			clearEvents();
			task = getNextEvent();
		}
		
		isRunningCycle = false;
	}
	
	protected synchronized void singleCycle() {
		for (nextStateIndex = 0; nextStateIndex < stateVector.length; nextStateIndex++) {
			switch (stateVector[nextStateIndex]) {
			case main_region_state_initial:
				main_region_state_initial_react(true);
				break;
			case main_region_state_1_r1_state_type:
				main_region_state_1_r1_state_type_react(true);
				break;
			case main_region_state_1_r1_changePrice:
				main_region_state_1_r1_changePrice_react(true);
				break;
			case main_region_state_1_r2_state_sli1:
				main_region_state_1_r2_state_sli1_react(true);
				break;
			case main_region_state_1_r3_state_sli2:
				main_region_state_1_r3_state_sli2_react(true);
				break;
			case main_region_state_1_r4_state_sli3:
				main_region_state_1_r4_state_sli3_react(true);
				break;
			case main_region_state_1_r5_state_nfc:
				main_region_state_1_r5_state_nfc_react(true);
				break;
			case main_region_state_1_r6_state_caculate:
				main_region_state_1_r6_state_caculate_react(true);
				break;
			case main_region_state_1_r7_state_addCup:
				main_region_state_1_r7_state_addCup_react(true);
				break;
			case main_region_state_1_r8_state_timer:
				main_region_state_1_r8_state_timer_react(true);
				break;
			case main_region_state_refund1:
				main_region_state_refund1_react(true);
				break;
			case main_region_state_prepare:
				main_region_state_prepare_react(true);
				break;
			case main_region_state_refund2:
				main_region_state_refund2_react(true);
				break;
			default:
				// $NullState$
			}
		}
	}
	
	protected Runnable getNextEvent() {
		if(!inEventQueue.isEmpty()) {
			return inEventQueue.poll();
		}
		return null;
	}
	
	protected Runnable getDefaultEvent() {
		return new Runnable() {
			@Override
			public void run() {
				singleCycle();
			}
		};
	}
	
	public synchronized void exit() {
		exitSequence_main_region();
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public synchronized boolean isActive() {
		return stateVector[0] != State.$NullState$||stateVector[1] != State.$NullState$||stateVector[2] != State.$NullState$||stateVector[3] != State.$NullState$||stateVector[4] != State.$NullState$||stateVector[5] != State.$NullState$||stateVector[6] != State.$NullState$||stateVector[7] != State.$NullState$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public synchronized boolean isFinal() {
		return false;
	}
	/**
	* This method resets the incoming events (time events included).
	*/
	protected void clearEvents() {
		sCInterface.clearEvents();
		for (int i=0; i<timeEvents.length; i++) {
			timeEvents[i] = false;
		}
	}
	
	/**
	* This method resets the outgoing events.
	*/
	protected void clearOutEvents() {
		sCInterface.clearOutEvents();
	}
	
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public synchronized boolean isStateActive(State state) {
	
		switch (state) {
		case main_region_state_initial:
			return stateVector[0] == State.main_region_state_initial;
		case main_region_state_1:
			return stateVector[0].ordinal() >= State.
					main_region_state_1.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_1_r8_state_timer.ordinal();
		case main_region_state_1_r1_state_type:
			return stateVector[0] == State.main_region_state_1_r1_state_type;
		case main_region_state_1_r1_changePrice:
			return stateVector[0] == State.main_region_state_1_r1_changePrice;
		case main_region_state_1_r2_state_sli1:
			return stateVector[1] == State.main_region_state_1_r2_state_sli1;
		case main_region_state_1_r3_state_sli2:
			return stateVector[2] == State.main_region_state_1_r3_state_sli2;
		case main_region_state_1_r4_state_sli3:
			return stateVector[3] == State.main_region_state_1_r4_state_sli3;
		case main_region_state_1_r5_state_nfc:
			return stateVector[4] == State.main_region_state_1_r5_state_nfc;
		case main_region_state_1_r6_state_caculate:
			return stateVector[5] == State.main_region_state_1_r6_state_caculate;
		case main_region_state_1_r7_state_addCup:
			return stateVector[6] == State.main_region_state_1_r7_state_addCup;
		case main_region_state_1_r8_state_timer:
			return stateVector[7] == State.main_region_state_1_r8_state_timer;
		case main_region_state_refund1:
			return stateVector[0] == State.main_region_state_refund1;
		case main_region_state_prepare:
			return stateVector[0] == State.main_region_state_prepare;
		case main_region_state_refund2:
			return stateVector[0] == State.main_region_state_refund2;
		default:
			return false;
		}
	}
	
	/**
	* Set the {@link ITimer} for the state machine. It must be set
	* externally on a timed state machine before a run cycle can be correctly
	* executed.
	* 
	* @param timer
	*/
	public synchronized void setTimer(ITimer timer) {
		this.timer = timer;
	}
	
	/**
	* Returns the currently used timer.
	* 
	* @return {@link ITimer}
	*/
	public ITimer getTimer() {
		return timer;
	}
	
	public synchronized void timeElapsed(int eventID) {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				timeEvents[eventID] = true;
				singleCycle();
			}
		});
		runCycle();
	}
	
	public SCInterface getSCInterface() {
		return sCInterface;
	}
	
	public synchronized void raiseType1_btn() {
		sCInterface.raiseType1_btn();
	}
	
	public synchronized void raiseType2_btn() {
		sCInterface.raiseType2_btn();
	}
	
	public synchronized void raiseType3_btn() {
		sCInterface.raiseType3_btn();
	}
	
	public synchronized void raiseSli1_btn() {
		sCInterface.raiseSli1_btn();
	}
	
	public synchronized void raiseSli2_btn() {
		sCInterface.raiseSli2_btn();
	}
	
	public synchronized void raiseSli3_btn() {
		sCInterface.raiseSli3_btn();
	}
	
	public synchronized void raisePay_coins() {
		sCInterface.raisePay_coins();
	}
	
	public synchronized void raiseNfc_btn() {
		sCInterface.raiseNfc_btn();
	}
	
	public synchronized void raiseCancle_btn() {
		sCInterface.raiseCancle_btn();
	}
	
	public synchronized void raiseAddCup_Btn() {
		sCInterface.raiseAddCup_Btn();
	}
	
	public synchronized boolean isRaisedDoReset() {
		return sCInterface.isRaisedDoReset();
	}
	
	public synchronized boolean isRaisedDoPrepare() {
		return sCInterface.isRaisedDoPrepare();
	}
	
	public synchronized boolean isRaisedDoCaculate() {
		return sCInterface.isRaisedDoCaculate();
	}
	
	public synchronized boolean isRaisedDoChangeType() {
		return sCInterface.isRaisedDoChangeType();
	}
	
	public synchronized boolean isRaisedDoModify1() {
		return sCInterface.isRaisedDoModify1();
	}
	
	public synchronized boolean isRaisedDoModify2() {
		return sCInterface.isRaisedDoModify2();
	}
	
	public synchronized boolean isRaisedDoModify3() {
		return sCInterface.isRaisedDoModify3();
	}
	
	public synchronized boolean isRaisedDoStoreInfo() {
		return sCInterface.isRaisedDoStoreInfo();
	}
	
	public synchronized boolean isRaisedDoChangePrice() {
		return sCInterface.isRaisedDoChangePrice();
	}
	
	public synchronized boolean isRaisedDoRefund() {
		return sCInterface.isRaisedDoRefund();
	}
	
	public synchronized boolean isRaisedDoShowPricePay() {
		return sCInterface.isRaisedDoShowPricePay();
	}
	
	public synchronized boolean isRaisedDoShowTime() {
		return sCInterface.isRaisedDoShowTime();
	}
	
	public synchronized boolean isRaisedDoResetTime() {
		return sCInterface.isRaisedDoResetTime();
	}
	
	public synchronized boolean isRaisedDoChangeToSoup() {
		return sCInterface.isRaisedDoChangeToSoup();
	}
	
	public synchronized boolean isRaisedDoChangeToIcedTea() {
		return sCInterface.isRaisedDoChangeToIcedTea();
	}
	
	public synchronized double getPay() {
		return sCInterface.getPay();
	}
	
	public synchronized void setPay(double value) {
		sCInterface.setPay(value);
	}
	
	public synchronized double getPrice() {
		return sCInterface.getPrice();
	}
	
	public synchronized void setPrice(double value) {
		sCInterface.setPrice(value);
	}
	
	public synchronized boolean getIsBiip() {
		return sCInterface.getIsBiip();
	}
	
	public synchronized void setIsBiip(boolean value) {
		sCInterface.setIsBiip(value);
	}
	
	/* Entry action for state 'state_initial'. */
	private void entryAction_main_region_state_initial() {
		sCInterface.raiseDoReset();
	}
	
	/* Entry action for state 'state_1'. */
	private void entryAction_main_region_state_1() {
		timer.setTimer(this, 0, (45 * 1000), false);
	}
	
	/* Entry action for state 'changePrice'. */
	private void entryAction_main_region_state_1_r1_changePrice() {
		timer.setTimer(this, 1, 1, false);
		
		sCInterface.raiseDoChangePrice();
	}
	
	/* Entry action for state 'state_nfc'. */
	private void entryAction_main_region_state_1_r5_state_nfc() {
		timer.setTimer(this, 2, 1, false);
	}
	
	/* Entry action for state 'state_caculate'. */
	private void entryAction_main_region_state_1_r6_state_caculate() {
		timer.setTimer(this, 3, 1, false);
		
		sCInterface.raiseDoShowPricePay();
	}
	
	/* Entry action for state 'state_timer'. */
	private void entryAction_main_region_state_1_r8_state_timer() {
		sCInterface.raiseDoShowTime();
	}
	
	/* Entry action for state 'state_refund1'. */
	private void entryAction_main_region_state_refund1() {
		timer.setTimer(this, 4, 1, false);
		
		timer.setTimer(this, 5, 1, false);
	}
	
	/* Entry action for state 'state_prepare'. */
	private void entryAction_main_region_state_prepare() {
		timer.setTimer(this, 6, (15 * 1000), false);
		
		sCInterface.raiseDoPrepare();
	}
	
	/* Entry action for state 'state_refund2'. */
	private void entryAction_main_region_state_refund2() {
		timer.setTimer(this, 7, (5 * 1000), false);
		
		sCInterface.raiseDoRefund();
	}
	
	/* Exit action for state 'state_1'. */
	private void exitAction_main_region_state_1() {
		timer.unsetTimer(this, 0);
	}
	
	/* Exit action for state 'changePrice'. */
	private void exitAction_main_region_state_1_r1_changePrice() {
		timer.unsetTimer(this, 1);
	}
	
	/* Exit action for state 'state_nfc'. */
	private void exitAction_main_region_state_1_r5_state_nfc() {
		timer.unsetTimer(this, 2);
	}
	
	/* Exit action for state 'state_caculate'. */
	private void exitAction_main_region_state_1_r6_state_caculate() {
		timer.unsetTimer(this, 3);
	}
	
	/* Exit action for state 'state_refund1'. */
	private void exitAction_main_region_state_refund1() {
		timer.unsetTimer(this, 4);
		
		timer.unsetTimer(this, 5);
	}
	
	/* Exit action for state 'state_prepare'. */
	private void exitAction_main_region_state_prepare() {
		timer.unsetTimer(this, 6);
	}
	
	/* Exit action for state 'state_refund2'. */
	private void exitAction_main_region_state_refund2() {
		timer.unsetTimer(this, 7);
	}
	
	/* 'default' enter sequence for state state_initial */
	private void enterSequence_main_region_state_initial_default() {
		entryAction_main_region_state_initial();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_initial;
	}
	
	/* 'default' enter sequence for state state_type */
	private void enterSequence_main_region_state_1_r1_state_type_default() {
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_1_r1_state_type;
	}
	
	/* 'default' enter sequence for state changePrice */
	private void enterSequence_main_region_state_1_r1_changePrice_default() {
		entryAction_main_region_state_1_r1_changePrice();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_1_r1_changePrice;
	}
	
	/* 'default' enter sequence for state state_sli1 */
	private void enterSequence_main_region_state_1_r2_state_sli1_default() {
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_1_r2_state_sli1;
	}
	
	/* 'default' enter sequence for state state_sli2 */
	private void enterSequence_main_region_state_1_r3_state_sli2_default() {
		nextStateIndex = 2;
		stateVector[2] = State.main_region_state_1_r3_state_sli2;
	}
	
	/* 'default' enter sequence for state state_sli3 */
	private void enterSequence_main_region_state_1_r4_state_sli3_default() {
		nextStateIndex = 3;
		stateVector[3] = State.main_region_state_1_r4_state_sli3;
	}
	
	/* 'default' enter sequence for state state_nfc */
	private void enterSequence_main_region_state_1_r5_state_nfc_default() {
		entryAction_main_region_state_1_r5_state_nfc();
		nextStateIndex = 4;
		stateVector[4] = State.main_region_state_1_r5_state_nfc;
	}
	
	/* 'default' enter sequence for state state_caculate */
	private void enterSequence_main_region_state_1_r6_state_caculate_default() {
		entryAction_main_region_state_1_r6_state_caculate();
		nextStateIndex = 5;
		stateVector[5] = State.main_region_state_1_r6_state_caculate;
	}
	
	/* 'default' enter sequence for state state_addCup */
	private void enterSequence_main_region_state_1_r7_state_addCup_default() {
		nextStateIndex = 6;
		stateVector[6] = State.main_region_state_1_r7_state_addCup;
	}
	
	/* 'default' enter sequence for state state_timer */
	private void enterSequence_main_region_state_1_r8_state_timer_default() {
		entryAction_main_region_state_1_r8_state_timer();
		nextStateIndex = 7;
		stateVector[7] = State.main_region_state_1_r8_state_timer;
	}
	
	/* 'default' enter sequence for state state_refund1 */
	private void enterSequence_main_region_state_refund1_default() {
		entryAction_main_region_state_refund1();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_refund1;
	}
	
	/* 'default' enter sequence for state state_prepare */
	private void enterSequence_main_region_state_prepare_default() {
		entryAction_main_region_state_prepare();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare;
	}
	
	/* 'default' enter sequence for state state_refund2 */
	private void enterSequence_main_region_state_refund2_default() {
		entryAction_main_region_state_refund2();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_refund2;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_state_1_r1_default() {
		react_main_region_state_1_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_1_r2_default() {
		react_main_region_state_1_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r3 */
	private void enterSequence_main_region_state_1_r3_default() {
		react_main_region_state_1_r3__entry_Default();
	}
	
	/* 'default' enter sequence for region r4 */
	private void enterSequence_main_region_state_1_r4_default() {
		react_main_region_state_1_r4__entry_Default();
	}
	
	/* 'default' enter sequence for region r5 */
	private void enterSequence_main_region_state_1_r5_default() {
		react_main_region_state_1_r5__entry_Default();
	}
	
	/* 'default' enter sequence for region r6 */
	private void enterSequence_main_region_state_1_r6_default() {
		react_main_region_state_1_r6__entry_Default();
	}
	
	/* 'default' enter sequence for region r7 */
	private void enterSequence_main_region_state_1_r7_default() {
		react_main_region_state_1_r7__entry_Default();
	}
	
	/* 'default' enter sequence for region r8 */
	private void enterSequence_main_region_state_1_r8_default() {
		react_main_region_state_1_r8__entry_Default();
	}
	
	/* Default exit sequence for state state_initial */
	private void exitSequence_main_region_state_initial() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_1 */
	private void exitSequence_main_region_state_1() {
		exitSequence_main_region_state_1_r1();
		exitSequence_main_region_state_1_r2();
		exitSequence_main_region_state_1_r3();
		exitSequence_main_region_state_1_r4();
		exitSequence_main_region_state_1_r5();
		exitSequence_main_region_state_1_r6();
		exitSequence_main_region_state_1_r7();
		exitSequence_main_region_state_1_r8();
		exitAction_main_region_state_1();
	}
	
	/* Default exit sequence for state state_type */
	private void exitSequence_main_region_state_1_r1_state_type() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state changePrice */
	private void exitSequence_main_region_state_1_r1_changePrice() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_1_r1_changePrice();
	}
	
	/* Default exit sequence for state state_sli1 */
	private void exitSequence_main_region_state_1_r2_state_sli1() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_sli2 */
	private void exitSequence_main_region_state_1_r3_state_sli2() {
		nextStateIndex = 2;
		stateVector[2] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_sli3 */
	private void exitSequence_main_region_state_1_r4_state_sli3() {
		nextStateIndex = 3;
		stateVector[3] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_nfc */
	private void exitSequence_main_region_state_1_r5_state_nfc() {
		nextStateIndex = 4;
		stateVector[4] = State.$NullState$;
		
		exitAction_main_region_state_1_r5_state_nfc();
	}
	
	/* Default exit sequence for state state_caculate */
	private void exitSequence_main_region_state_1_r6_state_caculate() {
		nextStateIndex = 5;
		stateVector[5] = State.$NullState$;
		
		exitAction_main_region_state_1_r6_state_caculate();
	}
	
	/* Default exit sequence for state state_addCup */
	private void exitSequence_main_region_state_1_r7_state_addCup() {
		nextStateIndex = 6;
		stateVector[6] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_timer */
	private void exitSequence_main_region_state_1_r8_state_timer() {
		nextStateIndex = 7;
		stateVector[7] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_refund1 */
	private void exitSequence_main_region_state_refund1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_refund1();
	}
	
	/* Default exit sequence for state state_prepare */
	private void exitSequence_main_region_state_prepare() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare();
	}
	
	/* Default exit sequence for state state_refund2 */
	private void exitSequence_main_region_state_refund2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_refund2();
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		switch (stateVector[0]) {
		case main_region_state_initial:
			exitSequence_main_region_state_initial();
			break;
		case main_region_state_1_r1_state_type:
			exitSequence_main_region_state_1_r1_state_type();
			break;
		case main_region_state_1_r1_changePrice:
			exitSequence_main_region_state_1_r1_changePrice();
			break;
		case main_region_state_refund1:
			exitSequence_main_region_state_refund1();
			break;
		case main_region_state_prepare:
			exitSequence_main_region_state_prepare();
			break;
		case main_region_state_refund2:
			exitSequence_main_region_state_refund2();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case main_region_state_1_r2_state_sli1:
			exitSequence_main_region_state_1_r2_state_sli1();
			break;
		default:
			break;
		}
		
		switch (stateVector[2]) {
		case main_region_state_1_r3_state_sli2:
			exitSequence_main_region_state_1_r3_state_sli2();
			break;
		default:
			break;
		}
		
		switch (stateVector[3]) {
		case main_region_state_1_r4_state_sli3:
			exitSequence_main_region_state_1_r4_state_sli3();
			break;
		default:
			break;
		}
		
		switch (stateVector[4]) {
		case main_region_state_1_r5_state_nfc:
			exitSequence_main_region_state_1_r5_state_nfc();
			break;
		default:
			break;
		}
		
		switch (stateVector[5]) {
		case main_region_state_1_r6_state_caculate:
			exitSequence_main_region_state_1_r6_state_caculate();
			break;
		default:
			break;
		}
		
		switch (stateVector[6]) {
		case main_region_state_1_r7_state_addCup:
			exitSequence_main_region_state_1_r7_state_addCup();
			break;
		default:
			break;
		}
		
		switch (stateVector[7]) {
		case main_region_state_1_r8_state_timer:
			exitSequence_main_region_state_1_r8_state_timer();
			exitAction_main_region_state_1();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_1_r1() {
		switch (stateVector[0]) {
		case main_region_state_1_r1_state_type:
			exitSequence_main_region_state_1_r1_state_type();
			break;
		case main_region_state_1_r1_changePrice:
			exitSequence_main_region_state_1_r1_changePrice();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_1_r2() {
		switch (stateVector[1]) {
		case main_region_state_1_r2_state_sli1:
			exitSequence_main_region_state_1_r2_state_sli1();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r3 */
	private void exitSequence_main_region_state_1_r3() {
		switch (stateVector[2]) {
		case main_region_state_1_r3_state_sli2:
			exitSequence_main_region_state_1_r3_state_sli2();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r4 */
	private void exitSequence_main_region_state_1_r4() {
		switch (stateVector[3]) {
		case main_region_state_1_r4_state_sli3:
			exitSequence_main_region_state_1_r4_state_sli3();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r5 */
	private void exitSequence_main_region_state_1_r5() {
		switch (stateVector[4]) {
		case main_region_state_1_r5_state_nfc:
			exitSequence_main_region_state_1_r5_state_nfc();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r6 */
	private void exitSequence_main_region_state_1_r6() {
		switch (stateVector[5]) {
		case main_region_state_1_r6_state_caculate:
			exitSequence_main_region_state_1_r6_state_caculate();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r7 */
	private void exitSequence_main_region_state_1_r7() {
		switch (stateVector[6]) {
		case main_region_state_1_r7_state_addCup:
			exitSequence_main_region_state_1_r7_state_addCup();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r8 */
	private void exitSequence_main_region_state_1_r8() {
		switch (stateVector[7]) {
		case main_region_state_1_r8_state_timer:
			exitSequence_main_region_state_1_r8_state_timer();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		enterSequence_main_region_state_initial_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r1__entry_Default() {
		enterSequence_main_region_state_1_r1_state_type_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r2__entry_Default() {
		enterSequence_main_region_state_1_r2_state_sli1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r3__entry_Default() {
		enterSequence_main_region_state_1_r3_state_sli2_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r4__entry_Default() {
		enterSequence_main_region_state_1_r4_state_sli3_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r5__entry_Default() {
		enterSequence_main_region_state_1_r5_state_nfc_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r6__entry_Default() {
		enterSequence_main_region_state_1_r6_state_caculate_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r7__entry_Default() {
		enterSequence_main_region_state_1_r7_state_addCup_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_1_r8__entry_Default() {
		enterSequence_main_region_state_1_r8_state_timer_default();
	}
	
	private boolean react() {
		return false;
	}
	
	private boolean main_region_state_initial_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.type1_btn) {
				exitSequence_main_region_state_initial();
				sCInterface.raiseDoChangeType();
				
				entryAction_main_region_state_1();
				enterSequence_main_region_state_1_r1_changePrice_default();
				enterSequence_main_region_state_1_r2_default();
				enterSequence_main_region_state_1_r3_default();
				enterSequence_main_region_state_1_r4_default();
				enterSequence_main_region_state_1_r5_default();
				enterSequence_main_region_state_1_r6_default();
				enterSequence_main_region_state_1_r7_default();
				enterSequence_main_region_state_1_r8_default();
				react();
			} else {
				if (sCInterface.sli1_btn) {
					exitSequence_main_region_state_initial();
					sCInterface.raiseDoModify1();
					
					entryAction_main_region_state_1();
					enterSequence_main_region_state_1_r1_default();
					enterSequence_main_region_state_1_r2_state_sli1_default();
					enterSequence_main_region_state_1_r3_default();
					enterSequence_main_region_state_1_r4_default();
					enterSequence_main_region_state_1_r5_default();
					enterSequence_main_region_state_1_r6_default();
					enterSequence_main_region_state_1_r7_default();
					enterSequence_main_region_state_1_r8_default();
					react();
				} else {
					if (sCInterface.sli2_btn) {
						exitSequence_main_region_state_initial();
						sCInterface.raiseDoModify2();
						
						entryAction_main_region_state_1();
						enterSequence_main_region_state_1_r1_default();
						enterSequence_main_region_state_1_r2_default();
						enterSequence_main_region_state_1_r3_state_sli2_default();
						enterSequence_main_region_state_1_r4_default();
						enterSequence_main_region_state_1_r5_default();
						enterSequence_main_region_state_1_r6_default();
						enterSequence_main_region_state_1_r7_default();
						enterSequence_main_region_state_1_r8_default();
						react();
					} else {
						if (sCInterface.sli3_btn) {
							exitSequence_main_region_state_initial();
							sCInterface.raiseDoModify3();
							
							entryAction_main_region_state_1();
							enterSequence_main_region_state_1_r1_default();
							enterSequence_main_region_state_1_r2_default();
							enterSequence_main_region_state_1_r3_default();
							enterSequence_main_region_state_1_r4_state_sli3_default();
							enterSequence_main_region_state_1_r5_default();
							enterSequence_main_region_state_1_r6_default();
							enterSequence_main_region_state_1_r7_default();
							enterSequence_main_region_state_1_r8_default();
							react();
						} else {
							if (sCInterface.type2_btn) {
								exitSequence_main_region_state_initial();
								sCInterface.raiseDoChangeToSoup();
								
								entryAction_main_region_state_1();
								enterSequence_main_region_state_1_r1_changePrice_default();
								enterSequence_main_region_state_1_r2_default();
								enterSequence_main_region_state_1_r3_default();
								enterSequence_main_region_state_1_r4_default();
								enterSequence_main_region_state_1_r5_default();
								enterSequence_main_region_state_1_r6_default();
								enterSequence_main_region_state_1_r7_default();
								enterSequence_main_region_state_1_r8_default();
								react();
							} else {
								if (sCInterface.nfc_btn) {
									exitSequence_main_region_state_initial();
									sCInterface.raiseDoStoreInfo();
									
									entryAction_main_region_state_1();
									enterSequence_main_region_state_1_r1_default();
									enterSequence_main_region_state_1_r2_default();
									enterSequence_main_region_state_1_r3_default();
									enterSequence_main_region_state_1_r4_default();
									enterSequence_main_region_state_1_r5_state_nfc_default();
									enterSequence_main_region_state_1_r6_default();
									enterSequence_main_region_state_1_r7_default();
									enterSequence_main_region_state_1_r8_default();
									react();
								} else {
									if (sCInterface.pay_coins) {
										exitSequence_main_region_state_initial();
										sCInterface.raiseDoCaculate();
										
										entryAction_main_region_state_1();
										enterSequence_main_region_state_1_r1_default();
										enterSequence_main_region_state_1_r2_default();
										enterSequence_main_region_state_1_r3_default();
										enterSequence_main_region_state_1_r4_default();
										enterSequence_main_region_state_1_r5_default();
										enterSequence_main_region_state_1_r6_state_caculate_default();
										enterSequence_main_region_state_1_r7_default();
										enterSequence_main_region_state_1_r8_default();
										react();
									} else {
										if (sCInterface.addCup_Btn) {
											exitSequence_main_region_state_initial();
											sCInterface.raiseDoChangePrice();
											
											entryAction_main_region_state_1();
											enterSequence_main_region_state_1_r1_default();
											enterSequence_main_region_state_1_r2_default();
											enterSequence_main_region_state_1_r3_default();
											enterSequence_main_region_state_1_r4_default();
											enterSequence_main_region_state_1_r5_default();
											enterSequence_main_region_state_1_r6_default();
											enterSequence_main_region_state_1_r7_state_addCup_default();
											enterSequence_main_region_state_1_r8_default();
											react();
										} else {
											if (sCInterface.type3_btn) {
												exitSequence_main_region_state_initial();
												sCInterface.raiseDoChangeToIcedTea();
												
												entryAction_main_region_state_1();
												enterSequence_main_region_state_1_r1_changePrice_default();
												enterSequence_main_region_state_1_r2_default();
												enterSequence_main_region_state_1_r3_default();
												enterSequence_main_region_state_1_r4_default();
												enterSequence_main_region_state_1_r5_default();
												enterSequence_main_region_state_1_r6_default();
												enterSequence_main_region_state_1_r7_default();
												enterSequence_main_region_state_1_r8_default();
												react();
											} else {
												did_transition = false;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.cancle_btn) {
				exitSequence_main_region_state_1();
				enterSequence_main_region_state_refund1_default();
				react();
			} else {
				if (sCInterface.type1_btn) {
					exitSequence_main_region_state_1();
					sCInterface.raiseDoResetTime();
					
					entryAction_main_region_state_1();
					enterSequence_main_region_state_1_r1_default();
					enterSequence_main_region_state_1_r2_default();
					enterSequence_main_region_state_1_r3_default();
					enterSequence_main_region_state_1_r4_default();
					enterSequence_main_region_state_1_r5_default();
					enterSequence_main_region_state_1_r6_default();
					enterSequence_main_region_state_1_r7_default();
					enterSequence_main_region_state_1_r8_state_timer_default();
					react();
				} else {
					if (sCInterface.type2_btn) {
						exitSequence_main_region_state_1();
						sCInterface.raiseDoResetTime();
						
						entryAction_main_region_state_1();
						enterSequence_main_region_state_1_r1_default();
						enterSequence_main_region_state_1_r2_default();
						enterSequence_main_region_state_1_r3_default();
						enterSequence_main_region_state_1_r4_default();
						enterSequence_main_region_state_1_r5_default();
						enterSequence_main_region_state_1_r6_default();
						enterSequence_main_region_state_1_r7_default();
						enterSequence_main_region_state_1_r8_state_timer_default();
						react();
					} else {
						if (sCInterface.pay_coins) {
							exitSequence_main_region_state_1();
							sCInterface.raiseDoResetTime();
							
							entryAction_main_region_state_1();
							enterSequence_main_region_state_1_r1_default();
							enterSequence_main_region_state_1_r2_default();
							enterSequence_main_region_state_1_r3_default();
							enterSequence_main_region_state_1_r4_default();
							enterSequence_main_region_state_1_r5_default();
							enterSequence_main_region_state_1_r6_default();
							enterSequence_main_region_state_1_r7_default();
							enterSequence_main_region_state_1_r8_state_timer_default();
							react();
						} else {
							if (sCInterface.sli2_btn) {
								exitSequence_main_region_state_1();
								sCInterface.raiseDoResetTime();
								
								entryAction_main_region_state_1();
								enterSequence_main_region_state_1_r1_default();
								enterSequence_main_region_state_1_r2_default();
								enterSequence_main_region_state_1_r3_default();
								enterSequence_main_region_state_1_r4_default();
								enterSequence_main_region_state_1_r5_default();
								enterSequence_main_region_state_1_r6_default();
								enterSequence_main_region_state_1_r7_default();
								enterSequence_main_region_state_1_r8_state_timer_default();
								react();
							} else {
								if (sCInterface.sli3_btn) {
									exitSequence_main_region_state_1();
									sCInterface.raiseDoResetTime();
									
									entryAction_main_region_state_1();
									enterSequence_main_region_state_1_r1_default();
									enterSequence_main_region_state_1_r2_default();
									enterSequence_main_region_state_1_r3_default();
									enterSequence_main_region_state_1_r4_default();
									enterSequence_main_region_state_1_r5_default();
									enterSequence_main_region_state_1_r6_default();
									enterSequence_main_region_state_1_r7_default();
									enterSequence_main_region_state_1_r8_state_timer_default();
									react();
								} else {
									if (sCInterface.sli1_btn) {
										exitSequence_main_region_state_1();
										sCInterface.raiseDoResetTime();
										
										entryAction_main_region_state_1();
										enterSequence_main_region_state_1_r1_default();
										enterSequence_main_region_state_1_r2_default();
										enterSequence_main_region_state_1_r3_default();
										enterSequence_main_region_state_1_r4_default();
										enterSequence_main_region_state_1_r5_default();
										enterSequence_main_region_state_1_r6_default();
										enterSequence_main_region_state_1_r7_default();
										enterSequence_main_region_state_1_r8_state_timer_default();
										react();
									} else {
										if (sCInterface.sli1_btn) {
											exitSequence_main_region_state_1();
											sCInterface.raiseDoResetTime();
											
											entryAction_main_region_state_1();
											enterSequence_main_region_state_1_r1_default();
											enterSequence_main_region_state_1_r2_default();
											enterSequence_main_region_state_1_r3_default();
											enterSequence_main_region_state_1_r4_default();
											enterSequence_main_region_state_1_r5_default();
											enterSequence_main_region_state_1_r6_default();
											enterSequence_main_region_state_1_r7_default();
											enterSequence_main_region_state_1_r8_state_timer_default();
											react();
										} else {
											if (sCInterface.nfc_btn) {
												exitSequence_main_region_state_1();
												sCInterface.raiseDoResetTime();
												
												entryAction_main_region_state_1();
												enterSequence_main_region_state_1_r1_default();
												enterSequence_main_region_state_1_r2_default();
												enterSequence_main_region_state_1_r3_default();
												enterSequence_main_region_state_1_r4_default();
												enterSequence_main_region_state_1_r5_default();
												enterSequence_main_region_state_1_r6_default();
												enterSequence_main_region_state_1_r7_default();
												enterSequence_main_region_state_1_r8_state_timer_default();
												react();
											} else {
												if (timeEvents[0]) {
													exitSequence_main_region_state_1();
													enterSequence_main_region_state_refund1_default();
													react();
												} else {
													if (sCInterface.addCup_Btn) {
														exitSequence_main_region_state_1();
														sCInterface.raiseDoResetTime();
														
														entryAction_main_region_state_1();
														enterSequence_main_region_state_1_r1_default();
														enterSequence_main_region_state_1_r2_default();
														enterSequence_main_region_state_1_r3_default();
														enterSequence_main_region_state_1_r4_default();
														enterSequence_main_region_state_1_r5_default();
														enterSequence_main_region_state_1_r6_default();
														enterSequence_main_region_state_1_r7_default();
														enterSequence_main_region_state_1_r8_state_timer_default();
														react();
													} else {
														did_transition = false;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r1_state_type_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.type1_btn) {
				exitSequence_main_region_state_1_r1_state_type();
				sCInterface.raiseDoChangeType();
				
				enterSequence_main_region_state_1_r1_state_type_default();
			} else {
				if (sCInterface.type2_btn) {
					exitSequence_main_region_state_1_r1_state_type();
					sCInterface.raiseDoChangeToSoup();
					
					enterSequence_main_region_state_1_r1_state_type_default();
				} else {
					if (sCInterface.type3_btn) {
						exitSequence_main_region_state_1_r1_state_type();
						sCInterface.raiseDoChangeToIcedTea();
						
						enterSequence_main_region_state_1_r1_state_type_default();
					} else {
						did_transition = false;
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r1_changePrice_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[1]) {
				exitSequence_main_region_state_1_r1_changePrice();
				enterSequence_main_region_state_1_r1_state_type_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r2_state_sli1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.sli1_btn) {
				exitSequence_main_region_state_1_r2_state_sli1();
				sCInterface.raiseDoModify1();
				
				enterSequence_main_region_state_1_r2_state_sli1_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r3_state_sli2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.sli2_btn) {
				exitSequence_main_region_state_1_r3_state_sli2();
				sCInterface.raiseDoModify2();
				
				enterSequence_main_region_state_1_r3_state_sli2_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r4_state_sli3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.sli3_btn) {
				exitSequence_main_region_state_1_r4_state_sli3();
				sCInterface.raiseDoModify3();
				
				enterSequence_main_region_state_1_r4_state_sli3_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r5_state_nfc_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.nfc_btn) {
				exitSequence_main_region_state_1_r5_state_nfc();
				sCInterface.raiseDoStoreInfo();
				
				enterSequence_main_region_state_1_r5_state_nfc_default();
			} else {
				if (((timeEvents[2]) && ((sCInterface.getPrice()>0 && sCInterface.getIsBiip()==true)))) {
					exitSequence_main_region_state_1();
					enterSequence_main_region_state_prepare_default();
					react();
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r6_state_caculate_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((timeEvents[3]) && ((sCInterface.getPrice()<=sCInterface.getPay() && sCInterface.getPrice()>0)))) {
				exitSequence_main_region_state_1();
				enterSequence_main_region_state_prepare_default();
				react();
			} else {
				if (sCInterface.sli2_btn) {
					exitSequence_main_region_state_1_r6_state_caculate();
					sCInterface.raiseDoChangePrice();
					
					enterSequence_main_region_state_1_r6_state_caculate_default();
				} else {
					if (sCInterface.type1_btn) {
						exitSequence_main_region_state_1_r6_state_caculate();
						sCInterface.raiseDoChangePrice();
						
						enterSequence_main_region_state_1_r6_state_caculate_default();
					} else {
						if (sCInterface.type2_btn) {
							exitSequence_main_region_state_1_r6_state_caculate();
							sCInterface.raiseDoChangePrice();
							
							enterSequence_main_region_state_1_r6_state_caculate_default();
						} else {
							if (sCInterface.pay_coins) {
								exitSequence_main_region_state_1_r6_state_caculate();
								sCInterface.raiseDoCaculate();
								
								enterSequence_main_region_state_1_r6_state_caculate_default();
							} else {
								if (sCInterface.type3_btn) {
									exitSequence_main_region_state_1_r6_state_caculate();
									sCInterface.raiseDoChangePrice();
									
									enterSequence_main_region_state_1_r6_state_caculate_default();
								} else {
									if (sCInterface.sli3_btn) {
										exitSequence_main_region_state_1_r6_state_caculate();
										sCInterface.raiseDoChangePrice();
										
										enterSequence_main_region_state_1_r6_state_caculate_default();
									} else {
										did_transition = false;
									}
								}
							}
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r7_state_addCup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.addCup_Btn) {
				exitSequence_main_region_state_1_r7_state_addCup();
				sCInterface.raiseDoChangePrice();
				
				enterSequence_main_region_state_1_r7_state_addCup_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_1_r8_state_timer_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_1_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_refund1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((timeEvents[4]) && (sCInterface.getPay()>0))) {
				exitSequence_main_region_state_refund1();
				enterSequence_main_region_state_refund2_default();
				react();
			} else {
				if (((timeEvents[5]) && (sCInterface.getPay()==0))) {
					exitSequence_main_region_state_refund1();
					enterSequence_main_region_state_initial_default();
					react();
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[6]) {
				exitSequence_main_region_state_prepare();
				enterSequence_main_region_state_refund1_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_refund2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[7]) {
				exitSequence_main_region_state_refund2();
				enterSequence_main_region_state_initial_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
}
