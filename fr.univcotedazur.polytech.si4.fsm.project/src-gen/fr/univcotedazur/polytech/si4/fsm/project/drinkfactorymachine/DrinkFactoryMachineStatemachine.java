/** Generated by YAKINDU Statechart Tools code generator. */
package fr.univcotedazur.polytech.si4.fsm.project.drinkfactorymachine;

import fr.univcotedazur.polytech.si4.fsm.project.ITimer;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class DrinkFactoryMachineStatemachine implements IDrinkFactoryMachineStatemachine {
	protected class SCInterfaceImpl implements SCInterface {
	
		private List<SCInterfaceListener> listeners = new LinkedList<SCInterfaceListener>();
		
		public List<SCInterfaceListener> getListeners() {
			return listeners;
		}
		private boolean type1_btn;
		
		
		public void raiseType1_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							type1_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean type2_btn;
		
		
		public void raiseType2_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							type2_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean type3_btn;
		
		
		public void raiseType3_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							type3_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean sli1_btn;
		
		
		public void raiseSli1_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							sli1_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean sli2_btn;
		
		
		public void raiseSli2_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							sli2_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean sli3_btn;
		
		
		public void raiseSli3_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							sli3_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pay_coins;
		
		
		public void raisePay_coins() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pay_coins = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean nfc_btn;
		
		
		public void raiseNfc_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							nfc_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean cancle_btn;
		
		
		public void raiseCancle_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							cancle_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean addCup_Btn;
		
		
		public void raiseAddCup_Btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							addCup_Btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pr_icedTea;
		
		
		public void raisePr_icedTea() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pr_icedTea = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pr_tea;
		
		
		public void raisePr_tea() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pr_tea = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pr_soup;
		
		
		public void raisePr_soup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pr_soup = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pr_coffee;
		
		
		public void raisePr_coffee() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pr_coffee = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean pr_expresso;
		
		
		public void raisePr_expresso() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							pr_expresso = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean any_btn;
		
		
		public void raiseAny_btn() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							any_btn = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean needCup;
		
		
		public void raiseNeedCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							needCup = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean shortEvent;
		
		
		public void raiseShort() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							shortEvent = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean longEvent;
		
		
		public void raiseLong() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							longEvent = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean prepare;
		
		
		public void raisePrepare() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							prepare = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean reset;
		
		
		public void raiseReset() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							reset = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean nextStep;
		
		
		public void raiseNextStep() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							nextStep = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean returnCoins;
		
		
		public void raiseReturnCoins() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							returnCoins = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean cancleTransaction;
		
		
		public void raiseCancleTransaction() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							cancleTransaction = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean y;
		
		
		public void raiseY() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							y = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean n;
		
		
		public void raiseN() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							n = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean enough;
		
		
		public void raiseEnough() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				inEventQueue.add(
					new Runnable() {
						@Override
						public void run() {
							enough = true;
							singleCycle();
						}
					}
				);
				runCycle();
			}
		}
		
		private boolean doReset;
		
		
		public boolean isRaisedDoReset() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doReset;
			}
		}
		
		protected void raiseDoReset() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doReset = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoResetRaised();
				}
			}
		}
		
		private boolean doCaculate;
		
		
		public boolean isRaisedDoCaculate() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doCaculate;
			}
		}
		
		protected void raiseDoCaculate() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doCaculate = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoCaculateRaised();
				}
			}
		}
		
		private boolean doChangeType;
		
		
		public boolean isRaisedDoChangeType() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeType;
			}
		}
		
		protected void raiseDoChangeType() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeType = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeTypeRaised();
				}
			}
		}
		
		private boolean doModify1;
		
		
		public boolean isRaisedDoModify1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doModify1;
			}
		}
		
		protected void raiseDoModify1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doModify1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoModify1Raised();
				}
			}
		}
		
		private boolean doModify2;
		
		
		public boolean isRaisedDoModify2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doModify2;
			}
		}
		
		protected void raiseDoModify2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doModify2 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoModify2Raised();
				}
			}
		}
		
		private boolean doModify3;
		
		
		public boolean isRaisedDoModify3() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doModify3;
			}
		}
		
		protected void raiseDoModify3() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doModify3 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoModify3Raised();
				}
			}
		}
		
		private boolean doStoreInfo;
		
		
		public boolean isRaisedDoStoreInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doStoreInfo;
			}
		}
		
		protected void raiseDoStoreInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doStoreInfo = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoStoreInfoRaised();
				}
			}
		}
		
		private boolean doChangePrice;
		
		
		public boolean isRaisedDoChangePrice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangePrice;
			}
		}
		
		protected void raiseDoChangePrice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangePrice = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangePriceRaised();
				}
			}
		}
		
		private boolean doRefund;
		
		
		public boolean isRaisedDoRefund() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doRefund;
			}
		}
		
		protected void raiseDoRefund() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doRefund = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoRefundRaised();
				}
			}
		}
		
		private boolean doResetTime;
		
		
		public boolean isRaisedDoResetTime() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doResetTime;
			}
		}
		
		protected void raiseDoResetTime() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doResetTime = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoResetTimeRaised();
				}
			}
		}
		
		private boolean doInitialNfcInfo;
		
		
		public boolean isRaisedDoInitialNfcInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doInitialNfcInfo;
			}
		}
		
		protected void raiseDoInitialNfcInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doInitialNfcInfo = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoInitialNfcInfoRaised();
				}
			}
		}
		
		private boolean doNfcCaculate;
		
		
		public boolean isRaisedDoNfcCaculate() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doNfcCaculate;
			}
		}
		
		protected void raiseDoNfcCaculate() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doNfcCaculate = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoNfcCaculateRaised();
				}
			}
		}
		
		private boolean doJudgeType;
		
		
		public boolean isRaisedDoJudgeType() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doJudgeType;
			}
		}
		
		protected void raiseDoJudgeType() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doJudgeType = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoJudgeTypeRaised();
				}
			}
		}
		
		private boolean doSetDosette;
		
		
		public boolean isRaisedDoSetDosette() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doSetDosette;
			}
		}
		
		protected void raiseDoSetDosette() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doSetDosette = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoSetDosetteRaised();
				}
			}
		}
		
		private boolean doHeatWater;
		
		
		public boolean isRaisedDoHeatWater() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doHeatWater;
			}
		}
		
		protected void raiseDoHeatWater() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doHeatWater = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoHeatWaterRaised();
				}
			}
		}
		
		private boolean doWaitHeat;
		
		
		public boolean isRaisedDoWaitHeat() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doWaitHeat;
			}
		}
		
		protected void raiseDoWaitHeat() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doWaitHeat = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoWaitHeatRaised();
				}
			}
		}
		
		private boolean doPutCup;
		
		
		public boolean isRaisedDoPutCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doPutCup;
			}
		}
		
		protected void raiseDoPutCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doPutCup = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoPutCupRaised();
				}
			}
		}
		
		private boolean doAddSugar;
		
		
		public boolean isRaisedDoAddSugar() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddSugar;
			}
		}
		
		protected void raiseDoAddSugar() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddSugar = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddSugarRaised();
				}
			}
		}
		
		private boolean doAddWater;
		
		
		public boolean isRaisedDoAddWater() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddWater;
			}
		}
		
		protected void raiseDoAddWater() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddWater = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddWaterRaised();
				}
			}
		}
		
		private boolean doAddWater1;
		
		
		public boolean isRaisedDoAddWater1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddWater1;
			}
		}
		
		protected void raiseDoAddWater1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddWater1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddWater1Raised();
				}
			}
		}
		
		private boolean doCrushGrain;
		
		
		public boolean isRaisedDoCrushGrain() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doCrushGrain;
			}
		}
		
		protected void raiseDoCrushGrain() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doCrushGrain = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoCrushGrainRaised();
				}
			}
		}
		
		private boolean doTampGrain;
		
		
		public boolean isRaisedDoTampGrain() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doTampGrain;
			}
		}
		
		protected void raiseDoTampGrain() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doTampGrain = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoTampGrainRaised();
				}
			}
		}
		
		private boolean doSetSachet;
		
		
		public boolean isRaisedDoSetSachet() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doSetSachet;
			}
		}
		
		protected void raiseDoSetSachet() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doSetSachet = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoSetSachetRaised();
				}
			}
		}
		
		private boolean doWaitInfusion;
		
		
		public boolean isRaisedDoWaitInfusion() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doWaitInfusion;
			}
		}
		
		protected void raiseDoWaitInfusion() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doWaitInfusion = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoWaitInfusionRaised();
				}
			}
		}
		
		private boolean doWithdrawSachet;
		
		
		public boolean isRaisedDoWithdrawSachet() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doWithdrawSachet;
			}
		}
		
		protected void raiseDoWithdrawSachet() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doWithdrawSachet = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoWithdrawSachetRaised();
				}
			}
		}
		
		private boolean doJudgeCup;
		
		
		public boolean isRaisedDoJudgeCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doJudgeCup;
			}
		}
		
		protected void raiseDoJudgeCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doJudgeCup = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoJudgeCupRaised();
				}
			}
		}
		
		private boolean doSetSoup;
		
		
		public boolean isRaisedDoSetSoup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doSetSoup;
			}
		}
		
		protected void raiseDoSetSoup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doSetSoup = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoSetSoupRaised();
				}
			}
		}
		
		private boolean doAddSpice;
		
		
		public boolean isRaisedDoAddSpice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddSpice;
			}
		}
		
		protected void raiseDoAddSpice() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddSpice = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddSpiceRaised();
				}
			}
		}
		
		private boolean doWaitHeatToHot;
		
		
		public boolean isRaisedDoWaitHeatToHot() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doWaitHeatToHot;
			}
		}
		
		protected void raiseDoWaitHeatToHot() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doWaitHeatToHot = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoWaitHeatToHotRaised();
				}
			}
		}
		
		private boolean doLockDoor;
		
		
		public boolean isRaisedDoLockDoor() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doLockDoor;
			}
		}
		
		protected void raiseDoLockDoor() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doLockDoor = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoLockDoorRaised();
				}
			}
		}
		
		private boolean doInjectSN2;
		
		
		public boolean isRaisedDoInjectSN2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doInjectSN2;
			}
		}
		
		protected void raiseDoInjectSN2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doInjectSN2 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoInjectSN2Raised();
				}
			}
		}
		
		private boolean doInjectLN2;
		
		
		public boolean isRaisedDoInjectLN2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doInjectLN2;
			}
		}
		
		protected void raiseDoInjectLN2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doInjectLN2 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoInjectLN2Raised();
				}
			}
		}
		
		private boolean doOpenDoor;
		
		
		public boolean isRaisedDoOpenDoor() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doOpenDoor;
			}
		}
		
		protected void raiseDoOpenDoor() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doOpenDoor = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoOpenDoorRaised();
				}
			}
		}
		
		private boolean doWaitTake;
		
		
		public boolean isRaisedDoWaitTake() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doWaitTake;
			}
		}
		
		protected void raiseDoWaitTake() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doWaitTake = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoWaitTakeRaised();
				}
			}
		}
		
		private boolean doJudgeN2Time;
		
		
		public boolean isRaisedDoJudgeN2Time() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doJudgeN2Time;
			}
		}
		
		protected void raiseDoJudgeN2Time() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doJudgeN2Time = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoJudgeN2TimeRaised();
				}
			}
		}
		
		private boolean doClean;
		
		
		public boolean isRaisedDoClean() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doClean;
			}
		}
		
		protected void raiseDoClean() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doClean = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoCleanRaised();
				}
			}
		}
		
		private boolean doAddCoin;
		
		
		public boolean isRaisedDoAddCoin() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddCoin;
			}
		}
		
		protected void raiseDoAddCoin() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddCoin = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddCoinRaised();
				}
			}
		}
		
		private boolean doJudgeRB;
		
		
		public boolean isRaisedDoJudgeRB() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doJudgeRB;
			}
		}
		
		protected void raiseDoJudgeRB() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doJudgeRB = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoJudgeRBRaised();
				}
			}
		}
		
		private boolean doJudgeIfReturnCoins;
		
		
		public boolean isRaisedDoJudgeIfReturnCoins() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doJudgeIfReturnCoins;
			}
		}
		
		protected void raiseDoJudgeIfReturnCoins() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doJudgeIfReturnCoins = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoJudgeIfReturnCoinsRaised();
				}
			}
		}
		
		private boolean doCancleTransaction;
		
		
		public boolean isRaisedDoCancleTransaction() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doCancleTransaction;
			}
		}
		
		protected void raiseDoCancleTransaction() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doCancleTransaction = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoCancleTransactionRaised();
				}
			}
		}
		
		private boolean doCancleOrder;
		
		
		public boolean isRaisedDoCancleOrder() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doCancleOrder;
			}
		}
		
		protected void raiseDoCancleOrder() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doCancleOrder = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoCancleOrderRaised();
				}
			}
		}
		
		private boolean doChangeSlider;
		
		
		public boolean isRaisedDoChangeSlider() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeSlider;
			}
		}
		
		protected void raiseDoChangeSlider() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeSlider = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeSliderRaised();
				}
			}
		}
		
		private boolean doChangeSliderToSoup;
		
		
		public boolean isRaisedDoChangeSliderToSoup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeSliderToSoup;
			}
		}
		
		protected void raiseDoChangeSliderToSoup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeSliderToSoup = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeSliderToSoupRaised();
				}
			}
		}
		
		private boolean doChangeSliderToIcedTea;
		
		
		public boolean isRaisedDoChangeSliderToIcedTea() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeSliderToIcedTea;
			}
		}
		
		protected void raiseDoChangeSliderToIcedTea() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeSliderToIcedTea = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeSliderToIcedTeaRaised();
				}
			}
		}
		
		private boolean doChangeSlider1;
		
		
		public boolean isRaisedDoChangeSlider1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeSlider1;
			}
		}
		
		protected void raiseDoChangeSlider1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeSlider1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeSlider1Raised();
				}
			}
		}
		
		private boolean doChangeSliderToSoup1;
		
		
		public boolean isRaisedDoChangeSliderToSoup1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeSliderToSoup1;
			}
		}
		
		protected void raiseDoChangeSliderToSoup1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeSliderToSoup1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeSliderToSoup1Raised();
				}
			}
		}
		
		private boolean doChangeSliderToIcedTea1;
		
		
		public boolean isRaisedDoChangeSliderToIcedTea1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doChangeSliderToIcedTea1;
			}
		}
		
		protected void raiseDoChangeSliderToIcedTea1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doChangeSliderToIcedTea1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoChangeSliderToIcedTea1Raised();
				}
			}
		}
		
		private boolean doDeleteInfo;
		
		
		public boolean isRaisedDoDeleteInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doDeleteInfo;
			}
		}
		
		protected void raiseDoDeleteInfo() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doDeleteInfo = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoDeleteInfoRaised();
				}
			}
		}
		
		private boolean doIfAddMilk;
		
		
		public boolean isRaisedDoIfAddMilk() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfAddMilk;
			}
		}
		
		protected void raiseDoIfAddMilk() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfAddMilk = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfAddMilkRaised();
				}
			}
		}
		
		private boolean doAddMilk;
		
		
		public boolean isRaisedDoAddMilk() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddMilk;
			}
		}
		
		protected void raiseDoAddMilk() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddMilk = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddMilkRaised();
				}
			}
		}
		
		private boolean doIfAddCroutons;
		
		
		public boolean isRaisedDoIfAddCroutons() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfAddCroutons;
			}
		}
		
		protected void raiseDoIfAddCroutons() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfAddCroutons = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfAddCroutonsRaised();
				}
			}
		}
		
		private boolean doAddCroutons;
		
		
		public boolean isRaisedDoAddCroutons() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddCroutons;
			}
		}
		
		protected void raiseDoAddCroutons() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddCroutons = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddCroutonsRaised();
				}
			}
		}
		
		private boolean doIfAddSirop;
		
		
		public boolean isRaisedDoIfAddSirop() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfAddSirop;
			}
		}
		
		protected void raiseDoIfAddSirop() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfAddSirop = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfAddSiropRaised();
				}
			}
		}
		
		private boolean doAddSirop;
		
		
		public boolean isRaisedDoAddSirop() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddSirop;
			}
		}
		
		protected void raiseDoAddSirop() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddSirop = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddSiropRaised();
				}
			}
		}
		
		private boolean doIfAddIceCream;
		
		
		public boolean isRaisedDoIfAddIceCream() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfAddIceCream;
			}
		}
		
		protected void raiseDoIfAddIceCream() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfAddIceCream = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfAddIceCreamRaised();
				}
			}
		}
		
		private boolean doAddIceCream;
		
		
		public boolean isRaisedDoAddIceCream() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddIceCream;
			}
		}
		
		protected void raiseDoAddIceCream() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddIceCream = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddIceCreamRaised();
				}
			}
		}
		
		private boolean doIfEnoughMoney1;
		
		
		public boolean isRaisedDoIfEnoughMoney1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfEnoughMoney1;
			}
		}
		
		protected void raiseDoIfEnoughMoney1() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfEnoughMoney1 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfEnoughMoney1Raised();
				}
			}
		}
		
		private boolean doIfEnoughMoney2;
		
		
		public boolean isRaisedDoIfEnoughMoney2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfEnoughMoney2;
			}
		}
		
		protected void raiseDoIfEnoughMoney2() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfEnoughMoney2 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfEnoughMoney2Raised();
				}
			}
		}
		
		private boolean doIfEnoughMoney3;
		
		
		public boolean isRaisedDoIfEnoughMoney3() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfEnoughMoney3;
			}
		}
		
		protected void raiseDoIfEnoughMoney3() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfEnoughMoney3 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfEnoughMoney3Raised();
				}
			}
		}
		
		private boolean doIfEnoughMoney4;
		
		
		public boolean isRaisedDoIfEnoughMoney4() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIfEnoughMoney4;
			}
		}
		
		protected void raiseDoIfEnoughMoney4() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIfEnoughMoney4 = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIfEnoughMoney4Raised();
				}
			}
		}
		
		private boolean doAddCup;
		
		
		public boolean isRaisedDoAddCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doAddCup;
			}
		}
		
		protected void raiseDoAddCup() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doAddCup = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoAddCupRaised();
				}
			}
		}
		
		private boolean doIf11Times;
		
		
		public boolean isRaisedDoIf11Times() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return doIf11Times;
			}
		}
		
		protected void raiseDoIf11Times() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				doIf11Times = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDoIf11TimesRaised();
				}
			}
		}
		
		private boolean do11Times;
		
		
		public boolean isRaisedDo11Times() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				return do11Times;
			}
		}
		
		protected void raiseDo11Times() {
			synchronized(DrinkFactoryMachineStatemachine.this) {
				do11Times = true;
				for (SCInterfaceListener listener : listeners) {
					listener.onDo11TimesRaised();
				}
			}
		}
		
		protected void clearEvents() {
			type1_btn = false;
			type2_btn = false;
			type3_btn = false;
			sli1_btn = false;
			sli2_btn = false;
			sli3_btn = false;
			pay_coins = false;
			nfc_btn = false;
			cancle_btn = false;
			addCup_Btn = false;
			pr_icedTea = false;
			pr_tea = false;
			pr_soup = false;
			pr_coffee = false;
			pr_expresso = false;
			any_btn = false;
			needCup = false;
			shortEvent = false;
			longEvent = false;
			prepare = false;
			reset = false;
			nextStep = false;
			returnCoins = false;
			cancleTransaction = false;
			y = false;
			n = false;
			enough = false;
		}
		protected void clearOutEvents() {
		
		doReset = false;
		doCaculate = false;
		doChangeType = false;
		doModify1 = false;
		doModify2 = false;
		doModify3 = false;
		doStoreInfo = false;
		doChangePrice = false;
		doRefund = false;
		doResetTime = false;
		doInitialNfcInfo = false;
		doNfcCaculate = false;
		doJudgeType = false;
		doSetDosette = false;
		doHeatWater = false;
		doWaitHeat = false;
		doPutCup = false;
		doAddSugar = false;
		doAddWater = false;
		doAddWater1 = false;
		doCrushGrain = false;
		doTampGrain = false;
		doSetSachet = false;
		doWaitInfusion = false;
		doWithdrawSachet = false;
		doJudgeCup = false;
		doSetSoup = false;
		doAddSpice = false;
		doWaitHeatToHot = false;
		doLockDoor = false;
		doInjectSN2 = false;
		doInjectLN2 = false;
		doOpenDoor = false;
		doWaitTake = false;
		doJudgeN2Time = false;
		doClean = false;
		doAddCoin = false;
		doJudgeRB = false;
		doJudgeIfReturnCoins = false;
		doCancleTransaction = false;
		doCancleOrder = false;
		doChangeSlider = false;
		doChangeSliderToSoup = false;
		doChangeSliderToIcedTea = false;
		doChangeSlider1 = false;
		doChangeSliderToSoup1 = false;
		doChangeSliderToIcedTea1 = false;
		doDeleteInfo = false;
		doIfAddMilk = false;
		doAddMilk = false;
		doIfAddCroutons = false;
		doAddCroutons = false;
		doIfAddSirop = false;
		doAddSirop = false;
		doIfAddIceCream = false;
		doAddIceCream = false;
		doIfEnoughMoney1 = false;
		doIfEnoughMoney2 = false;
		doIfEnoughMoney3 = false;
		doIfEnoughMoney4 = false;
		doAddCup = false;
		doIf11Times = false;
		do11Times = false;
		}
		
	}
	
	
	protected SCInterfaceImpl sCInterface;
	
	private boolean initialized = false;
	
	public enum State {
		main_region_state_choose,
		main_region_state_choose_addcup_state1,
		main_region_state_choose_ty_state_type,
		main_region_state_choose_ty_state_type2,
		main_region_state_choose_ty_state_type3,
		main_region_state_choose_ty_state_initial,
		main_region_state_choose_r2_state_sli1,
		main_region_state_choose_r3_state_sli2,
		main_region_state_choose_r4_state_sli3,
		main_region_state_choose_r5_state_nfc1,
		main_region_state_choose_r5_state_nfc2,
		main_region_state_choose_r5_if_11_times,
		main_region_state_choose_r5__11times,
		main_region_state_choose_r6_state_caculate,
		main_region_state_choose_r7_state_resetTimer,
		main_region_state_choose_r7_state_timer,
		main_region_state_prepare,
		main_region_state_prepare_r1_state_judgeType,
		main_region_state_prepare_r1_wait_take,
		main_region_state_prepare_r1_prepare_1,
		main_region_state_prepare_r1_prepare_1_r1_set_dosette,
		main_region_state_prepare_r1_prepare_1_r1_crush_grain,
		main_region_state_prepare_r1_prepare_1_r1_set_sachet,
		main_region_state_prepare_r1_prepare_1_r1_judge_cup,
		main_region_state_prepare_r1_prepare_1_r1_put_cup,
		main_region_state_prepare_r1_prepare_1_r2_heat_water,
		main_region_state_prepare_r1_perpare_2,
		main_region_state_prepare_r1_perpare_2_r1_tamp_grain,
		main_region_state_prepare_r1_perpare_2_r2_state_1,
		main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat,
		main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup,
		main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup,
		main_region_state_prepare_r1_state_2,
		main_region_state_prepare_r1_state_2_r1_wait_heat,
		main_region_state_prepare_r1_state_2_r2_set_soup,
		main_region_state_prepare_r1_state_2_r3_add_spice,
		main_region_state_prepare_r1_state_3,
		main_region_state_prepare_r1_state_3_r1_wait_hot,
		main_region_state_prepare_r1_state_3_r2_judge_cup,
		main_region_state_prepare_r1_state_3_r2_put_cup,
		main_region_state_prepare_r1_wait_infusion,
		main_region_state_prepare_r1_withdraw_sachet,
		main_region_state_prepare_r1_lock_door,
		main_region_state_prepare_r1_inject_N2,
		main_region_state_prepare_r1_inject_N2_r1_entry_raise,
		main_region_state_prepare_r1_inject_N2_r1_inject_shortTime,
		main_region_state_prepare_r1_inject_N2_r1_judge_Time,
		main_region_state_prepare_r1_open_door,
		main_region_state_prepare_r1_prepare_3,
		main_region_state_prepare_r1_prepare_3_r1_add_sugar,
		main_region_state_prepare_r1_prepare_3_r1_if_add_sirop,
		main_region_state_prepare_r1_prepare_3_r1_add_sirop,
		main_region_state_prepare_r1_prepare_3_r1_judgeMoney1,
		main_region_state_prepare_r1_prepare_3_r2_add_water,
		main_region_state_prepare_r1_if_add_milk,
		main_region_state_prepare_r1_add_milk,
		main_region_state_prepare_r1_add_soup_water,
		main_region_state_prepare_r1_if_add_croutons,
		main_region_state_prepare_r1_add_Croutons,
		main_region_state_prepare_r1_if_add_iceCream,
		main_region_state_prepare_r1_add_iceCream,
		main_region_state_prepare_r1_judgeMoney2,
		main_region_state_prepare_r1_judgeMoney3,
		main_region_state_prepare_r1_judgeMoney4,
		main_region_state_reset,
		main_region_state_refund,
		main_region_judge_returnCoinsOrCancleBank,
		main_region_CancleBankTransaction,
		main_region_cancleOrder,
		main_region_judge_ifReturnCoins,
		main_region_clean_machine,
		$NullState$
	};
	
	private final State[] stateVector = new State[8];
	
	private int nextStateIndex;
	
	private ITimer timer;
	
	private final boolean[] timeEvents = new boolean[20];
	
	private BlockingQueue<Runnable> inEventQueue = new LinkedBlockingQueue<Runnable>();
	private boolean isRunningCycle = false;
	public DrinkFactoryMachineStatemachine() {
		sCInterface = new SCInterfaceImpl();
	}
	
	public synchronized void init() {
		this.initialized = true;
		if (timer == null) {
			throw new IllegalStateException("timer not set.");
		}
		for (int i = 0; i < 8; i++) {
			stateVector[i] = State.$NullState$;
		}
		clearEvents();
		clearOutEvents();
	}
	
	public synchronized void enter() {
		if (!initialized) {
			throw new IllegalStateException(
				"The state machine needs to be initialized first by calling the init() function."
			);
		}
		if (timer == null) {
			throw new IllegalStateException("timer not set.");
		}
		enterSequence_main_region_default();
	}
	
	public synchronized void runCycle() {
		if (!initialized)
			throw new IllegalStateException(
					"The state machine needs to be initialized first by calling the init() function.");
		
		if (isRunningCycle) {
			return;
		}
		isRunningCycle = true;
		
		clearOutEvents();
	
		Runnable task = getNextEvent();
		if (task == null) {
			task = getDefaultEvent();
		}
		
		while (task != null) {
			task.run();
			clearEvents();
			task = getNextEvent();
		}
		
		isRunningCycle = false;
	}
	
	protected synchronized void singleCycle() {
		for (nextStateIndex = 0; nextStateIndex < stateVector.length; nextStateIndex++) {
			switch (stateVector[nextStateIndex]) {
			case main_region_state_choose_addcup_state1:
				main_region_state_choose_addcup_state1_react(true);
				break;
			case main_region_state_choose_ty_state_type:
				main_region_state_choose_ty_state_type_react(true);
				break;
			case main_region_state_choose_ty_state_type2:
				main_region_state_choose_ty_state_type2_react(true);
				break;
			case main_region_state_choose_ty_state_type3:
				main_region_state_choose_ty_state_type3_react(true);
				break;
			case main_region_state_choose_ty_state_initial:
				main_region_state_choose_ty_state_initial_react(true);
				break;
			case main_region_state_choose_r2_state_sli1:
				main_region_state_choose_r2_state_sli1_react(true);
				break;
			case main_region_state_choose_r3_state_sli2:
				main_region_state_choose_r3_state_sli2_react(true);
				break;
			case main_region_state_choose_r4_state_sli3:
				main_region_state_choose_r4_state_sli3_react(true);
				break;
			case main_region_state_choose_r5_state_nfc1:
				main_region_state_choose_r5_state_nfc1_react(true);
				break;
			case main_region_state_choose_r5_state_nfc2:
				main_region_state_choose_r5_state_nfc2_react(true);
				break;
			case main_region_state_choose_r5_if_11_times:
				main_region_state_choose_r5_if_11_times_react(true);
				break;
			case main_region_state_choose_r5__11times:
				main_region_state_choose_r5__11times_react(true);
				break;
			case main_region_state_choose_r6_state_caculate:
				main_region_state_choose_r6_state_caculate_react(true);
				break;
			case main_region_state_choose_r7_state_resetTimer:
				main_region_state_choose_r7_state_resetTimer_react(true);
				break;
			case main_region_state_choose_r7_state_timer:
				main_region_state_choose_r7_state_timer_react(true);
				break;
			case main_region_state_prepare_r1_state_judgeType:
				main_region_state_prepare_r1_state_judgeType_react(true);
				break;
			case main_region_state_prepare_r1_wait_take:
				main_region_state_prepare_r1_wait_take_react(true);
				break;
			case main_region_state_prepare_r1_prepare_1_r1_set_dosette:
				main_region_state_prepare_r1_prepare_1_r1_set_dosette_react(true);
				break;
			case main_region_state_prepare_r1_prepare_1_r1_crush_grain:
				main_region_state_prepare_r1_prepare_1_r1_crush_grain_react(true);
				break;
			case main_region_state_prepare_r1_prepare_1_r1_set_sachet:
				main_region_state_prepare_r1_prepare_1_r1_set_sachet_react(true);
				break;
			case main_region_state_prepare_r1_prepare_1_r1_judge_cup:
				main_region_state_prepare_r1_prepare_1_r1_judge_cup_react(true);
				break;
			case main_region_state_prepare_r1_prepare_1_r1_put_cup:
				main_region_state_prepare_r1_prepare_1_r1_put_cup_react(true);
				break;
			case main_region_state_prepare_r1_prepare_1_r2_heat_water:
				main_region_state_prepare_r1_prepare_1_r2_heat_water_react(true);
				break;
			case main_region_state_prepare_r1_perpare_2_r1_tamp_grain:
				main_region_state_prepare_r1_perpare_2_r1_tamp_grain_react(true);
				break;
			case main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat:
				main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat_react(true);
				break;
			case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup:
				main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup_react(true);
				break;
			case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup:
				main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup_react(true);
				break;
			case main_region_state_prepare_r1_state_2_r1_wait_heat:
				main_region_state_prepare_r1_state_2_r1_wait_heat_react(true);
				break;
			case main_region_state_prepare_r1_state_2_r2_set_soup:
				main_region_state_prepare_r1_state_2_r2_set_soup_react(true);
				break;
			case main_region_state_prepare_r1_state_2_r3_add_spice:
				main_region_state_prepare_r1_state_2_r3_add_spice_react(true);
				break;
			case main_region_state_prepare_r1_state_3_r1_wait_hot:
				main_region_state_prepare_r1_state_3_r1_wait_hot_react(true);
				break;
			case main_region_state_prepare_r1_state_3_r2_judge_cup:
				main_region_state_prepare_r1_state_3_r2_judge_cup_react(true);
				break;
			case main_region_state_prepare_r1_state_3_r2_put_cup:
				main_region_state_prepare_r1_state_3_r2_put_cup_react(true);
				break;
			case main_region_state_prepare_r1_wait_infusion:
				main_region_state_prepare_r1_wait_infusion_react(true);
				break;
			case main_region_state_prepare_r1_withdraw_sachet:
				main_region_state_prepare_r1_withdraw_sachet_react(true);
				break;
			case main_region_state_prepare_r1_lock_door:
				main_region_state_prepare_r1_lock_door_react(true);
				break;
			case main_region_state_prepare_r1_inject_N2_r1_entry_raise:
				main_region_state_prepare_r1_inject_N2_r1_entry_raise_react(true);
				break;
			case main_region_state_prepare_r1_inject_N2_r1_inject_shortTime:
				main_region_state_prepare_r1_inject_N2_r1_inject_shortTime_react(true);
				break;
			case main_region_state_prepare_r1_inject_N2_r1_judge_Time:
				main_region_state_prepare_r1_inject_N2_r1_judge_Time_react(true);
				break;
			case main_region_state_prepare_r1_open_door:
				main_region_state_prepare_r1_open_door_react(true);
				break;
			case main_region_state_prepare_r1_prepare_3_r1_add_sugar:
				main_region_state_prepare_r1_prepare_3_r1_add_sugar_react(true);
				break;
			case main_region_state_prepare_r1_prepare_3_r1_if_add_sirop:
				main_region_state_prepare_r1_prepare_3_r1_if_add_sirop_react(true);
				break;
			case main_region_state_prepare_r1_prepare_3_r1_add_sirop:
				main_region_state_prepare_r1_prepare_3_r1_add_sirop_react(true);
				break;
			case main_region_state_prepare_r1_prepare_3_r1_judgeMoney1:
				main_region_state_prepare_r1_prepare_3_r1_judgeMoney1_react(true);
				break;
			case main_region_state_prepare_r1_prepare_3_r2_add_water:
				main_region_state_prepare_r1_prepare_3_r2_add_water_react(true);
				break;
			case main_region_state_prepare_r1_if_add_milk:
				main_region_state_prepare_r1_if_add_milk_react(true);
				break;
			case main_region_state_prepare_r1_add_milk:
				main_region_state_prepare_r1_add_milk_react(true);
				break;
			case main_region_state_prepare_r1_add_soup_water:
				main_region_state_prepare_r1_add_soup_water_react(true);
				break;
			case main_region_state_prepare_r1_if_add_croutons:
				main_region_state_prepare_r1_if_add_croutons_react(true);
				break;
			case main_region_state_prepare_r1_add_Croutons:
				main_region_state_prepare_r1_add_Croutons_react(true);
				break;
			case main_region_state_prepare_r1_if_add_iceCream:
				main_region_state_prepare_r1_if_add_iceCream_react(true);
				break;
			case main_region_state_prepare_r1_add_iceCream:
				main_region_state_prepare_r1_add_iceCream_react(true);
				break;
			case main_region_state_prepare_r1_judgeMoney2:
				main_region_state_prepare_r1_judgeMoney2_react(true);
				break;
			case main_region_state_prepare_r1_judgeMoney3:
				main_region_state_prepare_r1_judgeMoney3_react(true);
				break;
			case main_region_state_prepare_r1_judgeMoney4:
				main_region_state_prepare_r1_judgeMoney4_react(true);
				break;
			case main_region_state_reset:
				main_region_state_reset_react(true);
				break;
			case main_region_state_refund:
				main_region_state_refund_react(true);
				break;
			case main_region_judge_returnCoinsOrCancleBank:
				main_region_judge_returnCoinsOrCancleBank_react(true);
				break;
			case main_region_CancleBankTransaction:
				main_region_CancleBankTransaction_react(true);
				break;
			case main_region_cancleOrder:
				main_region_cancleOrder_react(true);
				break;
			case main_region_judge_ifReturnCoins:
				main_region_judge_ifReturnCoins_react(true);
				break;
			case main_region_clean_machine:
				main_region_clean_machine_react(true);
				break;
			default:
				// $NullState$
			}
		}
	}
	
	protected Runnable getNextEvent() {
		if(!inEventQueue.isEmpty()) {
			return inEventQueue.poll();
		}
		return null;
	}
	
	protected Runnable getDefaultEvent() {
		return new Runnable() {
			@Override
			public void run() {
				singleCycle();
			}
		};
	}
	
	public synchronized void exit() {
		exitSequence_main_region();
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public synchronized boolean isActive() {
		return stateVector[0] != State.$NullState$||stateVector[1] != State.$NullState$||stateVector[2] != State.$NullState$||stateVector[3] != State.$NullState$||stateVector[4] != State.$NullState$||stateVector[5] != State.$NullState$||stateVector[6] != State.$NullState$||stateVector[7] != State.$NullState$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public synchronized boolean isFinal() {
		return false;
	}
	/**
	* This method resets the incoming events (time events included).
	*/
	protected void clearEvents() {
		sCInterface.clearEvents();
		for (int i=0; i<timeEvents.length; i++) {
			timeEvents[i] = false;
		}
	}
	
	/**
	* This method resets the outgoing events.
	*/
	protected void clearOutEvents() {
		sCInterface.clearOutEvents();
	}
	
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public synchronized boolean isStateActive(State state) {
	
		switch (state) {
		case main_region_state_choose:
			return stateVector[0].ordinal() >= State.
					main_region_state_choose.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_choose_r7_state_timer.ordinal();
		case main_region_state_choose_addcup_state1:
			return stateVector[0] == State.main_region_state_choose_addcup_state1;
		case main_region_state_choose_ty_state_type:
			return stateVector[1] == State.main_region_state_choose_ty_state_type;
		case main_region_state_choose_ty_state_type2:
			return stateVector[1] == State.main_region_state_choose_ty_state_type2;
		case main_region_state_choose_ty_state_type3:
			return stateVector[1] == State.main_region_state_choose_ty_state_type3;
		case main_region_state_choose_ty_state_initial:
			return stateVector[1] == State.main_region_state_choose_ty_state_initial;
		case main_region_state_choose_r2_state_sli1:
			return stateVector[2] == State.main_region_state_choose_r2_state_sli1;
		case main_region_state_choose_r3_state_sli2:
			return stateVector[3] == State.main_region_state_choose_r3_state_sli2;
		case main_region_state_choose_r4_state_sli3:
			return stateVector[4] == State.main_region_state_choose_r4_state_sli3;
		case main_region_state_choose_r5_state_nfc1:
			return stateVector[5] == State.main_region_state_choose_r5_state_nfc1;
		case main_region_state_choose_r5_state_nfc2:
			return stateVector[5] == State.main_region_state_choose_r5_state_nfc2;
		case main_region_state_choose_r5_if_11_times:
			return stateVector[5] == State.main_region_state_choose_r5_if_11_times;
		case main_region_state_choose_r5__11times:
			return stateVector[5] == State.main_region_state_choose_r5__11times;
		case main_region_state_choose_r6_state_caculate:
			return stateVector[6] == State.main_region_state_choose_r6_state_caculate;
		case main_region_state_choose_r7_state_resetTimer:
			return stateVector[7] == State.main_region_state_choose_r7_state_resetTimer;
		case main_region_state_choose_r7_state_timer:
			return stateVector[7] == State.main_region_state_choose_r7_state_timer;
		case main_region_state_prepare:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_judgeMoney4.ordinal();
		case main_region_state_prepare_r1_state_judgeType:
			return stateVector[0] == State.main_region_state_prepare_r1_state_judgeType;
		case main_region_state_prepare_r1_wait_take:
			return stateVector[0] == State.main_region_state_prepare_r1_wait_take;
		case main_region_state_prepare_r1_prepare_1:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare_r1_prepare_1.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_prepare_1_r2_heat_water.ordinal();
		case main_region_state_prepare_r1_prepare_1_r1_set_dosette:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_1_r1_set_dosette;
		case main_region_state_prepare_r1_prepare_1_r1_crush_grain:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_1_r1_crush_grain;
		case main_region_state_prepare_r1_prepare_1_r1_set_sachet:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_1_r1_set_sachet;
		case main_region_state_prepare_r1_prepare_1_r1_judge_cup:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_1_r1_judge_cup;
		case main_region_state_prepare_r1_prepare_1_r1_put_cup:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_1_r1_put_cup;
		case main_region_state_prepare_r1_prepare_1_r2_heat_water:
			return stateVector[1] == State.main_region_state_prepare_r1_prepare_1_r2_heat_water;
		case main_region_state_prepare_r1_perpare_2:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare_r1_perpare_2.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup.ordinal();
		case main_region_state_prepare_r1_perpare_2_r1_tamp_grain:
			return stateVector[0] == State.main_region_state_prepare_r1_perpare_2_r1_tamp_grain;
		case main_region_state_prepare_r1_perpare_2_r2_state_1:
			return stateVector[1].ordinal() >= State.
					main_region_state_prepare_r1_perpare_2_r2_state_1.ordinal()&& stateVector[1].ordinal() <= State.main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup.ordinal();
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat:
			return stateVector[1] == State.main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup:
			return stateVector[2] == State.main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup:
			return stateVector[2] == State.main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup;
		case main_region_state_prepare_r1_state_2:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare_r1_state_2.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_state_2_r3_add_spice.ordinal();
		case main_region_state_prepare_r1_state_2_r1_wait_heat:
			return stateVector[0] == State.main_region_state_prepare_r1_state_2_r1_wait_heat;
		case main_region_state_prepare_r1_state_2_r2_set_soup:
			return stateVector[1] == State.main_region_state_prepare_r1_state_2_r2_set_soup;
		case main_region_state_prepare_r1_state_2_r3_add_spice:
			return stateVector[2] == State.main_region_state_prepare_r1_state_2_r3_add_spice;
		case main_region_state_prepare_r1_state_3:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare_r1_state_3.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_state_3_r2_put_cup.ordinal();
		case main_region_state_prepare_r1_state_3_r1_wait_hot:
			return stateVector[0] == State.main_region_state_prepare_r1_state_3_r1_wait_hot;
		case main_region_state_prepare_r1_state_3_r2_judge_cup:
			return stateVector[1] == State.main_region_state_prepare_r1_state_3_r2_judge_cup;
		case main_region_state_prepare_r1_state_3_r2_put_cup:
			return stateVector[1] == State.main_region_state_prepare_r1_state_3_r2_put_cup;
		case main_region_state_prepare_r1_wait_infusion:
			return stateVector[0] == State.main_region_state_prepare_r1_wait_infusion;
		case main_region_state_prepare_r1_withdraw_sachet:
			return stateVector[0] == State.main_region_state_prepare_r1_withdraw_sachet;
		case main_region_state_prepare_r1_lock_door:
			return stateVector[0] == State.main_region_state_prepare_r1_lock_door;
		case main_region_state_prepare_r1_inject_N2:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare_r1_inject_N2.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_inject_N2_r1_judge_Time.ordinal();
		case main_region_state_prepare_r1_inject_N2_r1_entry_raise:
			return stateVector[0] == State.main_region_state_prepare_r1_inject_N2_r1_entry_raise;
		case main_region_state_prepare_r1_inject_N2_r1_inject_shortTime:
			return stateVector[0] == State.main_region_state_prepare_r1_inject_N2_r1_inject_shortTime;
		case main_region_state_prepare_r1_inject_N2_r1_judge_Time:
			return stateVector[0] == State.main_region_state_prepare_r1_inject_N2_r1_judge_Time;
		case main_region_state_prepare_r1_open_door:
			return stateVector[0] == State.main_region_state_prepare_r1_open_door;
		case main_region_state_prepare_r1_prepare_3:
			return stateVector[0].ordinal() >= State.
					main_region_state_prepare_r1_prepare_3.ordinal()&& stateVector[0].ordinal() <= State.main_region_state_prepare_r1_prepare_3_r2_add_water.ordinal();
		case main_region_state_prepare_r1_prepare_3_r1_add_sugar:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_3_r1_add_sugar;
		case main_region_state_prepare_r1_prepare_3_r1_if_add_sirop:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_3_r1_if_add_sirop;
		case main_region_state_prepare_r1_prepare_3_r1_add_sirop:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_3_r1_add_sirop;
		case main_region_state_prepare_r1_prepare_3_r1_judgeMoney1:
			return stateVector[0] == State.main_region_state_prepare_r1_prepare_3_r1_judgeMoney1;
		case main_region_state_prepare_r1_prepare_3_r2_add_water:
			return stateVector[1] == State.main_region_state_prepare_r1_prepare_3_r2_add_water;
		case main_region_state_prepare_r1_if_add_milk:
			return stateVector[0] == State.main_region_state_prepare_r1_if_add_milk;
		case main_region_state_prepare_r1_add_milk:
			return stateVector[0] == State.main_region_state_prepare_r1_add_milk;
		case main_region_state_prepare_r1_add_soup_water:
			return stateVector[0] == State.main_region_state_prepare_r1_add_soup_water;
		case main_region_state_prepare_r1_if_add_croutons:
			return stateVector[0] == State.main_region_state_prepare_r1_if_add_croutons;
		case main_region_state_prepare_r1_add_Croutons:
			return stateVector[0] == State.main_region_state_prepare_r1_add_Croutons;
		case main_region_state_prepare_r1_if_add_iceCream:
			return stateVector[0] == State.main_region_state_prepare_r1_if_add_iceCream;
		case main_region_state_prepare_r1_add_iceCream:
			return stateVector[0] == State.main_region_state_prepare_r1_add_iceCream;
		case main_region_state_prepare_r1_judgeMoney2:
			return stateVector[0] == State.main_region_state_prepare_r1_judgeMoney2;
		case main_region_state_prepare_r1_judgeMoney3:
			return stateVector[0] == State.main_region_state_prepare_r1_judgeMoney3;
		case main_region_state_prepare_r1_judgeMoney4:
			return stateVector[0] == State.main_region_state_prepare_r1_judgeMoney4;
		case main_region_state_reset:
			return stateVector[0] == State.main_region_state_reset;
		case main_region_state_refund:
			return stateVector[0] == State.main_region_state_refund;
		case main_region_judge_returnCoinsOrCancleBank:
			return stateVector[0] == State.main_region_judge_returnCoinsOrCancleBank;
		case main_region_CancleBankTransaction:
			return stateVector[0] == State.main_region_CancleBankTransaction;
		case main_region_cancleOrder:
			return stateVector[0] == State.main_region_cancleOrder;
		case main_region_judge_ifReturnCoins:
			return stateVector[0] == State.main_region_judge_ifReturnCoins;
		case main_region_clean_machine:
			return stateVector[0] == State.main_region_clean_machine;
		default:
			return false;
		}
	}
	
	/**
	* Set the {@link ITimer} for the state machine. It must be set
	* externally on a timed state machine before a run cycle can be correctly
	* executed.
	* 
	* @param timer
	*/
	public synchronized void setTimer(ITimer timer) {
		this.timer = timer;
	}
	
	/**
	* Returns the currently used timer.
	* 
	* @return {@link ITimer}
	*/
	public ITimer getTimer() {
		return timer;
	}
	
	public synchronized void timeElapsed(int eventID) {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				timeEvents[eventID] = true;
				singleCycle();
			}
		});
		runCycle();
	}
	
	public SCInterface getSCInterface() {
		return sCInterface;
	}
	
	public synchronized void raiseType1_btn() {
		sCInterface.raiseType1_btn();
	}
	
	public synchronized void raiseType2_btn() {
		sCInterface.raiseType2_btn();
	}
	
	public synchronized void raiseType3_btn() {
		sCInterface.raiseType3_btn();
	}
	
	public synchronized void raiseSli1_btn() {
		sCInterface.raiseSli1_btn();
	}
	
	public synchronized void raiseSli2_btn() {
		sCInterface.raiseSli2_btn();
	}
	
	public synchronized void raiseSli3_btn() {
		sCInterface.raiseSli3_btn();
	}
	
	public synchronized void raisePay_coins() {
		sCInterface.raisePay_coins();
	}
	
	public synchronized void raiseNfc_btn() {
		sCInterface.raiseNfc_btn();
	}
	
	public synchronized void raiseCancle_btn() {
		sCInterface.raiseCancle_btn();
	}
	
	public synchronized void raiseAddCup_Btn() {
		sCInterface.raiseAddCup_Btn();
	}
	
	public synchronized void raisePr_icedTea() {
		sCInterface.raisePr_icedTea();
	}
	
	public synchronized void raisePr_tea() {
		sCInterface.raisePr_tea();
	}
	
	public synchronized void raisePr_soup() {
		sCInterface.raisePr_soup();
	}
	
	public synchronized void raisePr_coffee() {
		sCInterface.raisePr_coffee();
	}
	
	public synchronized void raisePr_expresso() {
		sCInterface.raisePr_expresso();
	}
	
	public synchronized void raiseAny_btn() {
		sCInterface.raiseAny_btn();
	}
	
	public synchronized void raiseNeedCup() {
		sCInterface.raiseNeedCup();
	}
	
	public synchronized void raiseShort() {
		sCInterface.raiseShort();
	}
	
	public synchronized void raiseLong() {
		sCInterface.raiseLong();
	}
	
	public synchronized void raisePrepare() {
		sCInterface.raisePrepare();
	}
	
	public synchronized void raiseReset() {
		sCInterface.raiseReset();
	}
	
	public synchronized void raiseNextStep() {
		sCInterface.raiseNextStep();
	}
	
	public synchronized void raiseReturnCoins() {
		sCInterface.raiseReturnCoins();
	}
	
	public synchronized void raiseCancleTransaction() {
		sCInterface.raiseCancleTransaction();
	}
	
	public synchronized void raiseY() {
		sCInterface.raiseY();
	}
	
	public synchronized void raiseN() {
		sCInterface.raiseN();
	}
	
	public synchronized void raiseEnough() {
		sCInterface.raiseEnough();
	}
	
	public synchronized boolean isRaisedDoReset() {
		return sCInterface.isRaisedDoReset();
	}
	
	public synchronized boolean isRaisedDoCaculate() {
		return sCInterface.isRaisedDoCaculate();
	}
	
	public synchronized boolean isRaisedDoChangeType() {
		return sCInterface.isRaisedDoChangeType();
	}
	
	public synchronized boolean isRaisedDoModify1() {
		return sCInterface.isRaisedDoModify1();
	}
	
	public synchronized boolean isRaisedDoModify2() {
		return sCInterface.isRaisedDoModify2();
	}
	
	public synchronized boolean isRaisedDoModify3() {
		return sCInterface.isRaisedDoModify3();
	}
	
	public synchronized boolean isRaisedDoStoreInfo() {
		return sCInterface.isRaisedDoStoreInfo();
	}
	
	public synchronized boolean isRaisedDoChangePrice() {
		return sCInterface.isRaisedDoChangePrice();
	}
	
	public synchronized boolean isRaisedDoRefund() {
		return sCInterface.isRaisedDoRefund();
	}
	
	public synchronized boolean isRaisedDoResetTime() {
		return sCInterface.isRaisedDoResetTime();
	}
	
	public synchronized boolean isRaisedDoInitialNfcInfo() {
		return sCInterface.isRaisedDoInitialNfcInfo();
	}
	
	public synchronized boolean isRaisedDoNfcCaculate() {
		return sCInterface.isRaisedDoNfcCaculate();
	}
	
	public synchronized boolean isRaisedDoJudgeType() {
		return sCInterface.isRaisedDoJudgeType();
	}
	
	public synchronized boolean isRaisedDoSetDosette() {
		return sCInterface.isRaisedDoSetDosette();
	}
	
	public synchronized boolean isRaisedDoHeatWater() {
		return sCInterface.isRaisedDoHeatWater();
	}
	
	public synchronized boolean isRaisedDoWaitHeat() {
		return sCInterface.isRaisedDoWaitHeat();
	}
	
	public synchronized boolean isRaisedDoPutCup() {
		return sCInterface.isRaisedDoPutCup();
	}
	
	public synchronized boolean isRaisedDoAddSugar() {
		return sCInterface.isRaisedDoAddSugar();
	}
	
	public synchronized boolean isRaisedDoAddWater() {
		return sCInterface.isRaisedDoAddWater();
	}
	
	public synchronized boolean isRaisedDoAddWater1() {
		return sCInterface.isRaisedDoAddWater1();
	}
	
	public synchronized boolean isRaisedDoCrushGrain() {
		return sCInterface.isRaisedDoCrushGrain();
	}
	
	public synchronized boolean isRaisedDoTampGrain() {
		return sCInterface.isRaisedDoTampGrain();
	}
	
	public synchronized boolean isRaisedDoSetSachet() {
		return sCInterface.isRaisedDoSetSachet();
	}
	
	public synchronized boolean isRaisedDoWaitInfusion() {
		return sCInterface.isRaisedDoWaitInfusion();
	}
	
	public synchronized boolean isRaisedDoWithdrawSachet() {
		return sCInterface.isRaisedDoWithdrawSachet();
	}
	
	public synchronized boolean isRaisedDoJudgeCup() {
		return sCInterface.isRaisedDoJudgeCup();
	}
	
	public synchronized boolean isRaisedDoSetSoup() {
		return sCInterface.isRaisedDoSetSoup();
	}
	
	public synchronized boolean isRaisedDoAddSpice() {
		return sCInterface.isRaisedDoAddSpice();
	}
	
	public synchronized boolean isRaisedDoWaitHeatToHot() {
		return sCInterface.isRaisedDoWaitHeatToHot();
	}
	
	public synchronized boolean isRaisedDoLockDoor() {
		return sCInterface.isRaisedDoLockDoor();
	}
	
	public synchronized boolean isRaisedDoInjectSN2() {
		return sCInterface.isRaisedDoInjectSN2();
	}
	
	public synchronized boolean isRaisedDoInjectLN2() {
		return sCInterface.isRaisedDoInjectLN2();
	}
	
	public synchronized boolean isRaisedDoOpenDoor() {
		return sCInterface.isRaisedDoOpenDoor();
	}
	
	public synchronized boolean isRaisedDoWaitTake() {
		return sCInterface.isRaisedDoWaitTake();
	}
	
	public synchronized boolean isRaisedDoJudgeN2Time() {
		return sCInterface.isRaisedDoJudgeN2Time();
	}
	
	public synchronized boolean isRaisedDoClean() {
		return sCInterface.isRaisedDoClean();
	}
	
	public synchronized boolean isRaisedDoAddCoin() {
		return sCInterface.isRaisedDoAddCoin();
	}
	
	public synchronized boolean isRaisedDoJudgeRB() {
		return sCInterface.isRaisedDoJudgeRB();
	}
	
	public synchronized boolean isRaisedDoJudgeIfReturnCoins() {
		return sCInterface.isRaisedDoJudgeIfReturnCoins();
	}
	
	public synchronized boolean isRaisedDoCancleTransaction() {
		return sCInterface.isRaisedDoCancleTransaction();
	}
	
	public synchronized boolean isRaisedDoCancleOrder() {
		return sCInterface.isRaisedDoCancleOrder();
	}
	
	public synchronized boolean isRaisedDoChangeSlider() {
		return sCInterface.isRaisedDoChangeSlider();
	}
	
	public synchronized boolean isRaisedDoChangeSliderToSoup() {
		return sCInterface.isRaisedDoChangeSliderToSoup();
	}
	
	public synchronized boolean isRaisedDoChangeSliderToIcedTea() {
		return sCInterface.isRaisedDoChangeSliderToIcedTea();
	}
	
	public synchronized boolean isRaisedDoChangeSlider1() {
		return sCInterface.isRaisedDoChangeSlider1();
	}
	
	public synchronized boolean isRaisedDoChangeSliderToSoup1() {
		return sCInterface.isRaisedDoChangeSliderToSoup1();
	}
	
	public synchronized boolean isRaisedDoChangeSliderToIcedTea1() {
		return sCInterface.isRaisedDoChangeSliderToIcedTea1();
	}
	
	public synchronized boolean isRaisedDoDeleteInfo() {
		return sCInterface.isRaisedDoDeleteInfo();
	}
	
	public synchronized boolean isRaisedDoIfAddMilk() {
		return sCInterface.isRaisedDoIfAddMilk();
	}
	
	public synchronized boolean isRaisedDoAddMilk() {
		return sCInterface.isRaisedDoAddMilk();
	}
	
	public synchronized boolean isRaisedDoIfAddCroutons() {
		return sCInterface.isRaisedDoIfAddCroutons();
	}
	
	public synchronized boolean isRaisedDoAddCroutons() {
		return sCInterface.isRaisedDoAddCroutons();
	}
	
	public synchronized boolean isRaisedDoIfAddSirop() {
		return sCInterface.isRaisedDoIfAddSirop();
	}
	
	public synchronized boolean isRaisedDoAddSirop() {
		return sCInterface.isRaisedDoAddSirop();
	}
	
	public synchronized boolean isRaisedDoIfAddIceCream() {
		return sCInterface.isRaisedDoIfAddIceCream();
	}
	
	public synchronized boolean isRaisedDoAddIceCream() {
		return sCInterface.isRaisedDoAddIceCream();
	}
	
	public synchronized boolean isRaisedDoIfEnoughMoney1() {
		return sCInterface.isRaisedDoIfEnoughMoney1();
	}
	
	public synchronized boolean isRaisedDoIfEnoughMoney2() {
		return sCInterface.isRaisedDoIfEnoughMoney2();
	}
	
	public synchronized boolean isRaisedDoIfEnoughMoney3() {
		return sCInterface.isRaisedDoIfEnoughMoney3();
	}
	
	public synchronized boolean isRaisedDoIfEnoughMoney4() {
		return sCInterface.isRaisedDoIfEnoughMoney4();
	}
	
	public synchronized boolean isRaisedDoAddCup() {
		return sCInterface.isRaisedDoAddCup();
	}
	
	public synchronized boolean isRaisedDoIf11Times() {
		return sCInterface.isRaisedDoIf11Times();
	}
	
	public synchronized boolean isRaisedDo11Times() {
		return sCInterface.isRaisedDo11Times();
	}
	
	/* Entry action for state 'state_type'. */
	private void entryAction_main_region_state_choose_ty_state_type() {
		sCInterface.raiseDoChangeType();
	}
	
	/* Entry action for state 'state_type2'. */
	private void entryAction_main_region_state_choose_ty_state_type2() {
		sCInterface.raiseDoChangeType();
	}
	
	/* Entry action for state 'state_type3'. */
	private void entryAction_main_region_state_choose_ty_state_type3() {
		sCInterface.raiseDoChangeType();
	}
	
	/* Entry action for state 'state_nfc1'. */
	private void entryAction_main_region_state_choose_r5_state_nfc1() {
		sCInterface.raiseDoInitialNfcInfo();
	}
	
	/* Entry action for state 'state_nfc2'. */
	private void entryAction_main_region_state_choose_r5_state_nfc2() {
		sCInterface.raiseDoNfcCaculate();
	}
	
	/* Entry action for state 'if_11_times'. */
	private void entryAction_main_region_state_choose_r5_if_11_times() {
		sCInterface.raiseDoIf11Times();
	}
	
	/* Entry action for state '11times'. */
	private void entryAction_main_region_state_choose_r5__11times() {
		timer.setTimer(this, 0, (1 * 1000), false);
		
		sCInterface.raiseDo11Times();
	}
	
	/* Entry action for state 'state_caculate'. */
	private void entryAction_main_region_state_choose_r6_state_caculate() {
		sCInterface.raiseDoCaculate();
	}
	
	/* Entry action for state 'state_resetTimer'. */
	private void entryAction_main_region_state_choose_r7_state_resetTimer() {
		timer.setTimer(this, 1, (45 * 1000), false);
		
		sCInterface.raiseDoResetTime();
	}
	
	/* Entry action for state 'state_judgeType'. */
	private void entryAction_main_region_state_prepare_r1_state_judgeType() {
		sCInterface.raiseDoJudgeType();
	}
	
	/* Entry action for state 'wait_take'. */
	private void entryAction_main_region_state_prepare_r1_wait_take() {
		timer.setTimer(this, 2, (10 * 1000), false);
		
		sCInterface.raiseDoWaitTake();
	}
	
	/* Entry action for state 'set_dosette'. */
	private void entryAction_main_region_state_prepare_r1_prepare_1_r1_set_dosette() {
		sCInterface.raiseDoSetDosette();
	}
	
	/* Entry action for state 'crush_grain'. */
	private void entryAction_main_region_state_prepare_r1_prepare_1_r1_crush_grain() {
		sCInterface.raiseDoCrushGrain();
	}
	
	/* Entry action for state 'set_sachet'. */
	private void entryAction_main_region_state_prepare_r1_prepare_1_r1_set_sachet() {
		sCInterface.raiseDoSetSachet();
	}
	
	/* Entry action for state 'judge_cup'. */
	private void entryAction_main_region_state_prepare_r1_prepare_1_r1_judge_cup() {
		sCInterface.raiseDoJudgeCup();
	}
	
	/* Entry action for state 'put_cup'. */
	private void entryAction_main_region_state_prepare_r1_prepare_1_r1_put_cup() {
		sCInterface.raiseDoPutCup();
	}
	
	/* Entry action for state 'heat_water'. */
	private void entryAction_main_region_state_prepare_r1_prepare_1_r2_heat_water() {
		sCInterface.raiseDoHeatWater();
	}
	
	/* Entry action for state 'tamp_grain'. */
	private void entryAction_main_region_state_prepare_r1_perpare_2_r1_tamp_grain() {
		sCInterface.raiseDoTampGrain();
	}
	
	/* Entry action for state 'wait_heat'. */
	private void entryAction_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat() {
		sCInterface.raiseDoWaitHeat();
	}
	
	/* Entry action for state 'judge_cup'. */
	private void entryAction_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup() {
		sCInterface.raiseDoJudgeCup();
	}
	
	/* Entry action for state 'put_cup'. */
	private void entryAction_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup() {
		sCInterface.raiseDoPutCup();
	}
	
	/* Entry action for state 'wait_heat'. */
	private void entryAction_main_region_state_prepare_r1_state_2_r1_wait_heat() {
		sCInterface.raiseDoWaitHeat();
	}
	
	/* Entry action for state 'set_soup'. */
	private void entryAction_main_region_state_prepare_r1_state_2_r2_set_soup() {
		sCInterface.raiseDoSetSoup();
	}
	
	/* Entry action for state 'add_spice'. */
	private void entryAction_main_region_state_prepare_r1_state_2_r3_add_spice() {
		sCInterface.raiseDoAddSpice();
	}
	
	/* Entry action for state 'wait_hot'. */
	private void entryAction_main_region_state_prepare_r1_state_3_r1_wait_hot() {
		sCInterface.raiseDoWaitHeatToHot();
	}
	
	/* Entry action for state 'judge_cup'. */
	private void entryAction_main_region_state_prepare_r1_state_3_r2_judge_cup() {
		sCInterface.raiseDoJudgeCup();
	}
	
	/* Entry action for state 'put_cup'. */
	private void entryAction_main_region_state_prepare_r1_state_3_r2_put_cup() {
		sCInterface.raiseDoPutCup();
	}
	
	/* Entry action for state 'wait_infusion'. */
	private void entryAction_main_region_state_prepare_r1_wait_infusion() {
		sCInterface.raiseDoWaitInfusion();
	}
	
	/* Entry action for state 'withdraw_sachet'. */
	private void entryAction_main_region_state_prepare_r1_withdraw_sachet() {
		timer.setTimer(this, 3, (3 * 1000), false);
		
		sCInterface.raiseDoWithdrawSachet();
	}
	
	/* Entry action for state 'lock_door'. */
	private void entryAction_main_region_state_prepare_r1_lock_door() {
		timer.setTimer(this, 4, (1 * 1000), false);
		
		sCInterface.raiseDoLockDoor();
	}
	
	/* Entry action for state 'entry/raise'. */
	private void entryAction_main_region_state_prepare_r1_inject_N2_r1_entry_raise() {
		timer.setTimer(this, 5, (8 * 1000), false);
		
		sCInterface.raiseDoInjectLN2();
	}
	
	/* Entry action for state 'inject_shortTime'. */
	private void entryAction_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime() {
		timer.setTimer(this, 6, (4 * 1000), false);
		
		sCInterface.raiseDoInjectSN2();
	}
	
	/* Entry action for state 'judge_Time'. */
	private void entryAction_main_region_state_prepare_r1_inject_N2_r1_judge_Time() {
		sCInterface.raiseDoJudgeN2Time();
	}
	
	/* Entry action for state 'open_door'. */
	private void entryAction_main_region_state_prepare_r1_open_door() {
		timer.setTimer(this, 7, (1 * 1000), false);
		
		sCInterface.raiseDoOpenDoor();
	}
	
	/* Entry action for state 'add_sugar'. */
	private void entryAction_main_region_state_prepare_r1_prepare_3_r1_add_sugar() {
		sCInterface.raiseDoAddSugar();
	}
	
	/* Entry action for state 'if_add_sirop'. */
	private void entryAction_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop() {
		sCInterface.raiseDoIfAddSirop();
	}
	
	/* Entry action for state 'add_sirop'. */
	private void entryAction_main_region_state_prepare_r1_prepare_3_r1_add_sirop() {
		sCInterface.raiseDoAddSirop();
	}
	
	/* Entry action for state 'judgeMoney1'. */
	private void entryAction_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1() {
		timer.setTimer(this, 8, (10 * 1000), false);
		
		sCInterface.raiseDoIfEnoughMoney1();
	}
	
	/* Entry action for state 'add_water'. */
	private void entryAction_main_region_state_prepare_r1_prepare_3_r2_add_water() {
		sCInterface.raiseDoAddWater();
	}
	
	/* Entry action for state 'if_add_milk'. */
	private void entryAction_main_region_state_prepare_r1_if_add_milk() {
		sCInterface.raiseDoIfAddMilk();
	}
	
	/* Entry action for state 'add_milk'. */
	private void entryAction_main_region_state_prepare_r1_add_milk() {
		timer.setTimer(this, 9, (3 * 1000), false);
		
		sCInterface.raiseDoAddMilk();
	}
	
	/* Entry action for state 'add_soup_water'. */
	private void entryAction_main_region_state_prepare_r1_add_soup_water() {
		timer.setTimer(this, 10, (3 * 1000), false);
		
		sCInterface.raiseDoAddWater1();
	}
	
	/* Entry action for state 'if_add_croutons'. */
	private void entryAction_main_region_state_prepare_r1_if_add_croutons() {
		sCInterface.raiseDoIfAddCroutons();
	}
	
	/* Entry action for state 'add_Croutons'. */
	private void entryAction_main_region_state_prepare_r1_add_Croutons() {
		timer.setTimer(this, 11, (4 * 1000), false);
		
		sCInterface.raiseDoAddCroutons();
	}
	
	/* Entry action for state 'if_add_iceCream'. */
	private void entryAction_main_region_state_prepare_r1_if_add_iceCream() {
		sCInterface.raiseDoIfAddIceCream();
	}
	
	/* Entry action for state 'add_iceCream'. */
	private void entryAction_main_region_state_prepare_r1_add_iceCream() {
		timer.setTimer(this, 12, (3 * 1000), false);
		
		sCInterface.raiseDoAddIceCream();
	}
	
	/* Entry action for state 'judgeMoney2'. */
	private void entryAction_main_region_state_prepare_r1_judgeMoney2() {
		timer.setTimer(this, 13, (10 * 1000), false);
		
		sCInterface.raiseDoIfEnoughMoney2();
	}
	
	/* Entry action for state 'judgeMoney3'. */
	private void entryAction_main_region_state_prepare_r1_judgeMoney3() {
		timer.setTimer(this, 14, (10 * 1000), false);
		
		sCInterface.raiseDoIfEnoughMoney3();
	}
	
	/* Entry action for state 'judgeMoney4'. */
	private void entryAction_main_region_state_prepare_r1_judgeMoney4() {
		timer.setTimer(this, 15, (10 * 1000), false);
		
		sCInterface.raiseDoIfEnoughMoney4();
	}
	
	/* Entry action for state 'state_reset'. */
	private void entryAction_main_region_state_reset() {
		timer.setTimer(this, 16, 1, false);
		
		sCInterface.raiseDoReset();
	}
	
	/* Entry action for state 'state_refund'. */
	private void entryAction_main_region_state_refund() {
		timer.setTimer(this, 17, (3 * 1000), false);
		
		sCInterface.raiseDoRefund();
	}
	
	/* Entry action for state 'judge_returnCoinsOrCancleBank'. */
	private void entryAction_main_region_judge_returnCoinsOrCancleBank() {
		sCInterface.raiseDoJudgeRB();
	}
	
	/* Entry action for state 'CancleBankTransaction'. */
	private void entryAction_main_region_CancleBankTransaction() {
		sCInterface.raiseDoCancleTransaction();
	}
	
	/* Entry action for state 'cancleOrder'. */
	private void entryAction_main_region_cancleOrder() {
		timer.setTimer(this, 18, (2 * 1000), false);
		
		sCInterface.raiseDoCancleOrder();
	}
	
	/* Entry action for state 'judge_ifReturnCoins'. */
	private void entryAction_main_region_judge_ifReturnCoins() {
		sCInterface.raiseDoJudgeIfReturnCoins();
	}
	
	/* Entry action for state 'clean_machine'. */
	private void entryAction_main_region_clean_machine() {
		timer.setTimer(this, 19, (3 * 1000), false);
		
		sCInterface.raiseDoClean();
	}
	
	/* Exit action for state '11times'. */
	private void exitAction_main_region_state_choose_r5__11times() {
		timer.unsetTimer(this, 0);
	}
	
	/* Exit action for state 'state_resetTimer'. */
	private void exitAction_main_region_state_choose_r7_state_resetTimer() {
		timer.unsetTimer(this, 1);
	}
	
	/* Exit action for state 'wait_take'. */
	private void exitAction_main_region_state_prepare_r1_wait_take() {
		timer.unsetTimer(this, 2);
	}
	
	/* Exit action for state 'withdraw_sachet'. */
	private void exitAction_main_region_state_prepare_r1_withdraw_sachet() {
		timer.unsetTimer(this, 3);
	}
	
	/* Exit action for state 'lock_door'. */
	private void exitAction_main_region_state_prepare_r1_lock_door() {
		timer.unsetTimer(this, 4);
	}
	
	/* Exit action for state 'entry/raise'. */
	private void exitAction_main_region_state_prepare_r1_inject_N2_r1_entry_raise() {
		timer.unsetTimer(this, 5);
	}
	
	/* Exit action for state 'inject_shortTime'. */
	private void exitAction_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime() {
		timer.unsetTimer(this, 6);
	}
	
	/* Exit action for state 'open_door'. */
	private void exitAction_main_region_state_prepare_r1_open_door() {
		timer.unsetTimer(this, 7);
	}
	
	/* Exit action for state 'judgeMoney1'. */
	private void exitAction_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1() {
		timer.unsetTimer(this, 8);
	}
	
	/* Exit action for state 'add_milk'. */
	private void exitAction_main_region_state_prepare_r1_add_milk() {
		timer.unsetTimer(this, 9);
	}
	
	/* Exit action for state 'add_soup_water'. */
	private void exitAction_main_region_state_prepare_r1_add_soup_water() {
		timer.unsetTimer(this, 10);
	}
	
	/* Exit action for state 'add_Croutons'. */
	private void exitAction_main_region_state_prepare_r1_add_Croutons() {
		timer.unsetTimer(this, 11);
	}
	
	/* Exit action for state 'add_iceCream'. */
	private void exitAction_main_region_state_prepare_r1_add_iceCream() {
		timer.unsetTimer(this, 12);
	}
	
	/* Exit action for state 'judgeMoney2'. */
	private void exitAction_main_region_state_prepare_r1_judgeMoney2() {
		timer.unsetTimer(this, 13);
	}
	
	/* Exit action for state 'judgeMoney3'. */
	private void exitAction_main_region_state_prepare_r1_judgeMoney3() {
		timer.unsetTimer(this, 14);
	}
	
	/* Exit action for state 'judgeMoney4'. */
	private void exitAction_main_region_state_prepare_r1_judgeMoney4() {
		timer.unsetTimer(this, 15);
	}
	
	/* Exit action for state 'state_reset'. */
	private void exitAction_main_region_state_reset() {
		timer.unsetTimer(this, 16);
	}
	
	/* Exit action for state 'state_refund'. */
	private void exitAction_main_region_state_refund() {
		timer.unsetTimer(this, 17);
	}
	
	/* Exit action for state 'cancleOrder'. */
	private void exitAction_main_region_cancleOrder() {
		timer.unsetTimer(this, 18);
	}
	
	/* Exit action for state 'clean_machine'. */
	private void exitAction_main_region_clean_machine() {
		timer.unsetTimer(this, 19);
	}
	
	/* 'default' enter sequence for state state_choose */
	private void enterSequence_main_region_state_choose_default() {
		enterSequence_main_region_state_choose_addcup_default();
		enterSequence_main_region_state_choose_ty_default();
		enterSequence_main_region_state_choose_r2_default();
		enterSequence_main_region_state_choose_r3_default();
		enterSequence_main_region_state_choose_r4_default();
		enterSequence_main_region_state_choose_r5_default();
		enterSequence_main_region_state_choose_r6_default();
		enterSequence_main_region_state_choose_r7_default();
	}
	
	/* 'default' enter sequence for state state1 */
	private void enterSequence_main_region_state_choose_addcup_state1_default() {
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_choose_addcup_state1;
	}
	
	/* 'default' enter sequence for state state_type */
	private void enterSequence_main_region_state_choose_ty_state_type_default() {
		entryAction_main_region_state_choose_ty_state_type();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_choose_ty_state_type;
	}
	
	/* 'default' enter sequence for state state_type2 */
	private void enterSequence_main_region_state_choose_ty_state_type2_default() {
		entryAction_main_region_state_choose_ty_state_type2();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_choose_ty_state_type2;
	}
	
	/* 'default' enter sequence for state state_type3 */
	private void enterSequence_main_region_state_choose_ty_state_type3_default() {
		entryAction_main_region_state_choose_ty_state_type3();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_choose_ty_state_type3;
	}
	
	/* 'default' enter sequence for state state_initial */
	private void enterSequence_main_region_state_choose_ty_state_initial_default() {
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_choose_ty_state_initial;
	}
	
	/* 'default' enter sequence for state state_sli1 */
	private void enterSequence_main_region_state_choose_r2_state_sli1_default() {
		nextStateIndex = 2;
		stateVector[2] = State.main_region_state_choose_r2_state_sli1;
	}
	
	/* 'default' enter sequence for state state_sli2 */
	private void enterSequence_main_region_state_choose_r3_state_sli2_default() {
		nextStateIndex = 3;
		stateVector[3] = State.main_region_state_choose_r3_state_sli2;
	}
	
	/* 'default' enter sequence for state state_sli3 */
	private void enterSequence_main_region_state_choose_r4_state_sli3_default() {
		nextStateIndex = 4;
		stateVector[4] = State.main_region_state_choose_r4_state_sli3;
	}
	
	/* 'default' enter sequence for state state_nfc1 */
	private void enterSequence_main_region_state_choose_r5_state_nfc1_default() {
		entryAction_main_region_state_choose_r5_state_nfc1();
		nextStateIndex = 5;
		stateVector[5] = State.main_region_state_choose_r5_state_nfc1;
	}
	
	/* 'default' enter sequence for state state_nfc2 */
	private void enterSequence_main_region_state_choose_r5_state_nfc2_default() {
		entryAction_main_region_state_choose_r5_state_nfc2();
		nextStateIndex = 5;
		stateVector[5] = State.main_region_state_choose_r5_state_nfc2;
	}
	
	/* 'default' enter sequence for state if_11_times */
	private void enterSequence_main_region_state_choose_r5_if_11_times_default() {
		entryAction_main_region_state_choose_r5_if_11_times();
		nextStateIndex = 5;
		stateVector[5] = State.main_region_state_choose_r5_if_11_times;
	}
	
	/* 'default' enter sequence for state 11times */
	private void enterSequence_main_region_state_choose_r5__11times_default() {
		entryAction_main_region_state_choose_r5__11times();
		nextStateIndex = 5;
		stateVector[5] = State.main_region_state_choose_r5__11times;
	}
	
	/* 'default' enter sequence for state state_caculate */
	private void enterSequence_main_region_state_choose_r6_state_caculate_default() {
		entryAction_main_region_state_choose_r6_state_caculate();
		nextStateIndex = 6;
		stateVector[6] = State.main_region_state_choose_r6_state_caculate;
	}
	
	/* 'default' enter sequence for state state_resetTimer */
	private void enterSequence_main_region_state_choose_r7_state_resetTimer_default() {
		entryAction_main_region_state_choose_r7_state_resetTimer();
		nextStateIndex = 7;
		stateVector[7] = State.main_region_state_choose_r7_state_resetTimer;
	}
	
	/* 'default' enter sequence for state state_timer */
	private void enterSequence_main_region_state_choose_r7_state_timer_default() {
		nextStateIndex = 7;
		stateVector[7] = State.main_region_state_choose_r7_state_timer;
	}
	
	/* 'default' enter sequence for state state_prepare */
	private void enterSequence_main_region_state_prepare_default() {
		enterSequence_main_region_state_prepare_r1_default();
	}
	
	/* 'default' enter sequence for state state_judgeType */
	private void enterSequence_main_region_state_prepare_r1_state_judgeType_default() {
		entryAction_main_region_state_prepare_r1_state_judgeType();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_state_judgeType;
	}
	
	/* 'default' enter sequence for state wait_take */
	private void enterSequence_main_region_state_prepare_r1_wait_take_default() {
		entryAction_main_region_state_prepare_r1_wait_take();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_wait_take;
	}
	
	/* 'default' enter sequence for state set_dosette */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette_default() {
		entryAction_main_region_state_prepare_r1_prepare_1_r1_set_dosette();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_1_r1_set_dosette;
	}
	
	/* 'default' enter sequence for state crush_grain */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r1_crush_grain_default() {
		entryAction_main_region_state_prepare_r1_prepare_1_r1_crush_grain();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_1_r1_crush_grain;
	}
	
	/* 'default' enter sequence for state set_sachet */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r1_set_sachet_default() {
		entryAction_main_region_state_prepare_r1_prepare_1_r1_set_sachet();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_1_r1_set_sachet;
	}
	
	/* 'default' enter sequence for state judge_cup */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup_default() {
		entryAction_main_region_state_prepare_r1_prepare_1_r1_judge_cup();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_1_r1_judge_cup;
	}
	
	/* 'default' enter sequence for state put_cup */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r1_put_cup_default() {
		entryAction_main_region_state_prepare_r1_prepare_1_r1_put_cup();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_1_r1_put_cup;
	}
	
	/* 'default' enter sequence for state heat_water */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r2_heat_water_default() {
		entryAction_main_region_state_prepare_r1_prepare_1_r2_heat_water();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_prepare_r1_prepare_1_r2_heat_water;
	}
	
	/* 'default' enter sequence for state tamp_grain */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r1_tamp_grain_default() {
		entryAction_main_region_state_prepare_r1_perpare_2_r1_tamp_grain();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_perpare_2_r1_tamp_grain;
	}
	
	/* 'default' enter sequence for state state_1 */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_default() {
		enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_default();
		enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_default();
	}
	
	/* 'default' enter sequence for state wait_heat */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat_default() {
		entryAction_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat;
	}
	
	/* 'default' enter sequence for state judge_cup */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup_default() {
		entryAction_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup();
		nextStateIndex = 2;
		stateVector[2] = State.main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup;
	}
	
	/* 'default' enter sequence for state put_cup */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup_default() {
		entryAction_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup();
		nextStateIndex = 2;
		stateVector[2] = State.main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup;
	}
	
	/* 'default' enter sequence for state state_2 */
	private void enterSequence_main_region_state_prepare_r1_state_2_default() {
		enterSequence_main_region_state_prepare_r1_state_2_r1_default();
		enterSequence_main_region_state_prepare_r1_state_2_r2_default();
		enterSequence_main_region_state_prepare_r1_state_2_r3_default();
	}
	
	/* 'default' enter sequence for state wait_heat */
	private void enterSequence_main_region_state_prepare_r1_state_2_r1_wait_heat_default() {
		entryAction_main_region_state_prepare_r1_state_2_r1_wait_heat();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_state_2_r1_wait_heat;
	}
	
	/* 'default' enter sequence for state set_soup */
	private void enterSequence_main_region_state_prepare_r1_state_2_r2_set_soup_default() {
		entryAction_main_region_state_prepare_r1_state_2_r2_set_soup();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_prepare_r1_state_2_r2_set_soup;
	}
	
	/* 'default' enter sequence for state add_spice */
	private void enterSequence_main_region_state_prepare_r1_state_2_r3_add_spice_default() {
		entryAction_main_region_state_prepare_r1_state_2_r3_add_spice();
		nextStateIndex = 2;
		stateVector[2] = State.main_region_state_prepare_r1_state_2_r3_add_spice;
	}
	
	/* 'default' enter sequence for state state_3 */
	private void enterSequence_main_region_state_prepare_r1_state_3_default() {
		enterSequence_main_region_state_prepare_r1_state_3_r1_default();
		enterSequence_main_region_state_prepare_r1_state_3_r2_default();
	}
	
	/* 'default' enter sequence for state wait_hot */
	private void enterSequence_main_region_state_prepare_r1_state_3_r1_wait_hot_default() {
		entryAction_main_region_state_prepare_r1_state_3_r1_wait_hot();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_state_3_r1_wait_hot;
	}
	
	/* 'default' enter sequence for state judge_cup */
	private void enterSequence_main_region_state_prepare_r1_state_3_r2_judge_cup_default() {
		entryAction_main_region_state_prepare_r1_state_3_r2_judge_cup();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_prepare_r1_state_3_r2_judge_cup;
	}
	
	/* 'default' enter sequence for state put_cup */
	private void enterSequence_main_region_state_prepare_r1_state_3_r2_put_cup_default() {
		entryAction_main_region_state_prepare_r1_state_3_r2_put_cup();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_prepare_r1_state_3_r2_put_cup;
	}
	
	/* 'default' enter sequence for state wait_infusion */
	private void enterSequence_main_region_state_prepare_r1_wait_infusion_default() {
		entryAction_main_region_state_prepare_r1_wait_infusion();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_wait_infusion;
	}
	
	/* 'default' enter sequence for state withdraw_sachet */
	private void enterSequence_main_region_state_prepare_r1_withdraw_sachet_default() {
		entryAction_main_region_state_prepare_r1_withdraw_sachet();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_withdraw_sachet;
	}
	
	/* 'default' enter sequence for state lock_door */
	private void enterSequence_main_region_state_prepare_r1_lock_door_default() {
		entryAction_main_region_state_prepare_r1_lock_door();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_lock_door;
	}
	
	/* 'default' enter sequence for state inject_N2 */
	private void enterSequence_main_region_state_prepare_r1_inject_N2_default() {
		enterSequence_main_region_state_prepare_r1_inject_N2_r1_default();
	}
	
	/* 'default' enter sequence for state entry/raise */
	private void enterSequence_main_region_state_prepare_r1_inject_N2_r1_entry_raise_default() {
		entryAction_main_region_state_prepare_r1_inject_N2_r1_entry_raise();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_inject_N2_r1_entry_raise;
	}
	
	/* 'default' enter sequence for state inject_shortTime */
	private void enterSequence_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime_default() {
		entryAction_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_inject_N2_r1_inject_shortTime;
	}
	
	/* 'default' enter sequence for state judge_Time */
	private void enterSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time_default() {
		entryAction_main_region_state_prepare_r1_inject_N2_r1_judge_Time();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_inject_N2_r1_judge_Time;
	}
	
	/* 'default' enter sequence for state open_door */
	private void enterSequence_main_region_state_prepare_r1_open_door_default() {
		entryAction_main_region_state_prepare_r1_open_door();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_open_door;
	}
	
	/* 'default' enter sequence for state add_sugar */
	private void enterSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar_default() {
		entryAction_main_region_state_prepare_r1_prepare_3_r1_add_sugar();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_3_r1_add_sugar;
	}
	
	/* 'default' enter sequence for state if_add_sirop */
	private void enterSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop_default() {
		entryAction_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_3_r1_if_add_sirop;
	}
	
	/* 'default' enter sequence for state add_sirop */
	private void enterSequence_main_region_state_prepare_r1_prepare_3_r1_add_sirop_default() {
		entryAction_main_region_state_prepare_r1_prepare_3_r1_add_sirop();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_3_r1_add_sirop;
	}
	
	/* 'default' enter sequence for state judgeMoney1 */
	private void enterSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1_default() {
		entryAction_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_prepare_3_r1_judgeMoney1;
	}
	
	/* 'default' enter sequence for state add_water */
	private void enterSequence_main_region_state_prepare_r1_prepare_3_r2_add_water_default() {
		entryAction_main_region_state_prepare_r1_prepare_3_r2_add_water();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_state_prepare_r1_prepare_3_r2_add_water;
	}
	
	/* 'default' enter sequence for state if_add_milk */
	private void enterSequence_main_region_state_prepare_r1_if_add_milk_default() {
		entryAction_main_region_state_prepare_r1_if_add_milk();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_if_add_milk;
	}
	
	/* 'default' enter sequence for state add_milk */
	private void enterSequence_main_region_state_prepare_r1_add_milk_default() {
		entryAction_main_region_state_prepare_r1_add_milk();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_add_milk;
	}
	
	/* 'default' enter sequence for state add_soup_water */
	private void enterSequence_main_region_state_prepare_r1_add_soup_water_default() {
		entryAction_main_region_state_prepare_r1_add_soup_water();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_add_soup_water;
	}
	
	/* 'default' enter sequence for state if_add_croutons */
	private void enterSequence_main_region_state_prepare_r1_if_add_croutons_default() {
		entryAction_main_region_state_prepare_r1_if_add_croutons();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_if_add_croutons;
	}
	
	/* 'default' enter sequence for state add_Croutons */
	private void enterSequence_main_region_state_prepare_r1_add_Croutons_default() {
		entryAction_main_region_state_prepare_r1_add_Croutons();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_add_Croutons;
	}
	
	/* 'default' enter sequence for state if_add_iceCream */
	private void enterSequence_main_region_state_prepare_r1_if_add_iceCream_default() {
		entryAction_main_region_state_prepare_r1_if_add_iceCream();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_if_add_iceCream;
	}
	
	/* 'default' enter sequence for state add_iceCream */
	private void enterSequence_main_region_state_prepare_r1_add_iceCream_default() {
		entryAction_main_region_state_prepare_r1_add_iceCream();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_add_iceCream;
	}
	
	/* 'default' enter sequence for state judgeMoney2 */
	private void enterSequence_main_region_state_prepare_r1_judgeMoney2_default() {
		entryAction_main_region_state_prepare_r1_judgeMoney2();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_judgeMoney2;
	}
	
	/* 'default' enter sequence for state judgeMoney3 */
	private void enterSequence_main_region_state_prepare_r1_judgeMoney3_default() {
		entryAction_main_region_state_prepare_r1_judgeMoney3();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_judgeMoney3;
	}
	
	/* 'default' enter sequence for state judgeMoney4 */
	private void enterSequence_main_region_state_prepare_r1_judgeMoney4_default() {
		entryAction_main_region_state_prepare_r1_judgeMoney4();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_prepare_r1_judgeMoney4;
	}
	
	/* 'default' enter sequence for state state_reset */
	private void enterSequence_main_region_state_reset_default() {
		entryAction_main_region_state_reset();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_reset;
	}
	
	/* 'default' enter sequence for state state_refund */
	private void enterSequence_main_region_state_refund_default() {
		entryAction_main_region_state_refund();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_state_refund;
	}
	
	/* 'default' enter sequence for state judge_returnCoinsOrCancleBank */
	private void enterSequence_main_region_judge_returnCoinsOrCancleBank_default() {
		entryAction_main_region_judge_returnCoinsOrCancleBank();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_judge_returnCoinsOrCancleBank;
	}
	
	/* 'default' enter sequence for state CancleBankTransaction */
	private void enterSequence_main_region_CancleBankTransaction_default() {
		entryAction_main_region_CancleBankTransaction();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_CancleBankTransaction;
	}
	
	/* 'default' enter sequence for state cancleOrder */
	private void enterSequence_main_region_cancleOrder_default() {
		entryAction_main_region_cancleOrder();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_cancleOrder;
	}
	
	/* 'default' enter sequence for state judge_ifReturnCoins */
	private void enterSequence_main_region_judge_ifReturnCoins_default() {
		entryAction_main_region_judge_ifReturnCoins();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_judge_ifReturnCoins;
	}
	
	/* 'default' enter sequence for state clean_machine */
	private void enterSequence_main_region_clean_machine_default() {
		entryAction_main_region_clean_machine();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_clean_machine;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region addcup */
	private void enterSequence_main_region_state_choose_addcup_default() {
		react_main_region_state_choose_addcup__entry_Default();
	}
	
	/* 'default' enter sequence for region ty */
	private void enterSequence_main_region_state_choose_ty_default() {
		react_main_region_state_choose_ty__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_choose_r2_default() {
		react_main_region_state_choose_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r3 */
	private void enterSequence_main_region_state_choose_r3_default() {
		react_main_region_state_choose_r3__entry_Default();
	}
	
	/* 'default' enter sequence for region r4 */
	private void enterSequence_main_region_state_choose_r4_default() {
		react_main_region_state_choose_r4__entry_Default();
	}
	
	/* 'default' enter sequence for region r5 */
	private void enterSequence_main_region_state_choose_r5_default() {
		react_main_region_state_choose_r5__entry_Default();
	}
	
	/* 'default' enter sequence for region r6 */
	private void enterSequence_main_region_state_choose_r6_default() {
		react_main_region_state_choose_r6__entry_Default();
	}
	
	/* 'default' enter sequence for region r7 */
	private void enterSequence_main_region_state_choose_r7_default() {
		react_main_region_state_choose_r7__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_state_prepare_r1_default() {
		react_main_region_state_prepare_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_prepare_r1_prepare_1_r2_default() {
		react_main_region_state_prepare_r1_prepare_1_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_default() {
		react_main_region_state_prepare_r1_perpare_2_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_default() {
		react_main_region_state_prepare_r1_perpare_2_r2_state_1_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_default() {
		react_main_region_state_prepare_r1_perpare_2_r2_state_1_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_state_prepare_r1_state_2_r1_default() {
		react_main_region_state_prepare_r1_state_2_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_prepare_r1_state_2_r2_default() {
		react_main_region_state_prepare_r1_state_2_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r3 */
	private void enterSequence_main_region_state_prepare_r1_state_2_r3_default() {
		react_main_region_state_prepare_r1_state_2_r3__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_state_prepare_r1_state_3_r1_default() {
		react_main_region_state_prepare_r1_state_3_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_prepare_r1_state_3_r2_default() {
		react_main_region_state_prepare_r1_state_3_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_main_region_state_prepare_r1_inject_N2_r1_default() {
		react_main_region_state_prepare_r1_inject_N2_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_main_region_state_prepare_r1_prepare_3_r2_default() {
		react_main_region_state_prepare_r1_prepare_3_r2__entry_Default();
	}
	
	/* Default exit sequence for state state_choose */
	private void exitSequence_main_region_state_choose() {
		exitSequence_main_region_state_choose_addcup();
		exitSequence_main_region_state_choose_ty();
		exitSequence_main_region_state_choose_r2();
		exitSequence_main_region_state_choose_r3();
		exitSequence_main_region_state_choose_r4();
		exitSequence_main_region_state_choose_r5();
		exitSequence_main_region_state_choose_r6();
		exitSequence_main_region_state_choose_r7();
	}
	
	/* Default exit sequence for state state1 */
	private void exitSequence_main_region_state_choose_addcup_state1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_type */
	private void exitSequence_main_region_state_choose_ty_state_type() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_type2 */
	private void exitSequence_main_region_state_choose_ty_state_type2() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_type3 */
	private void exitSequence_main_region_state_choose_ty_state_type3() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_initial */
	private void exitSequence_main_region_state_choose_ty_state_initial() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_sli1 */
	private void exitSequence_main_region_state_choose_r2_state_sli1() {
		nextStateIndex = 2;
		stateVector[2] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_sli2 */
	private void exitSequence_main_region_state_choose_r3_state_sli2() {
		nextStateIndex = 3;
		stateVector[3] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_sli3 */
	private void exitSequence_main_region_state_choose_r4_state_sli3() {
		nextStateIndex = 4;
		stateVector[4] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_nfc1 */
	private void exitSequence_main_region_state_choose_r5_state_nfc1() {
		nextStateIndex = 5;
		stateVector[5] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_nfc2 */
	private void exitSequence_main_region_state_choose_r5_state_nfc2() {
		nextStateIndex = 5;
		stateVector[5] = State.$NullState$;
	}
	
	/* Default exit sequence for state if_11_times */
	private void exitSequence_main_region_state_choose_r5_if_11_times() {
		nextStateIndex = 5;
		stateVector[5] = State.$NullState$;
	}
	
	/* Default exit sequence for state 11times */
	private void exitSequence_main_region_state_choose_r5__11times() {
		nextStateIndex = 5;
		stateVector[5] = State.$NullState$;
		
		exitAction_main_region_state_choose_r5__11times();
	}
	
	/* Default exit sequence for state state_caculate */
	private void exitSequence_main_region_state_choose_r6_state_caculate() {
		nextStateIndex = 6;
		stateVector[6] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_resetTimer */
	private void exitSequence_main_region_state_choose_r7_state_resetTimer() {
		nextStateIndex = 7;
		stateVector[7] = State.$NullState$;
		
		exitAction_main_region_state_choose_r7_state_resetTimer();
	}
	
	/* Default exit sequence for state state_timer */
	private void exitSequence_main_region_state_choose_r7_state_timer() {
		nextStateIndex = 7;
		stateVector[7] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_prepare */
	private void exitSequence_main_region_state_prepare() {
		exitSequence_main_region_state_prepare_r1();
	}
	
	/* Default exit sequence for state state_judgeType */
	private void exitSequence_main_region_state_prepare_r1_state_judgeType() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state wait_take */
	private void exitSequence_main_region_state_prepare_r1_wait_take() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_wait_take();
	}
	
	/* Default exit sequence for state prepare_1 */
	private void exitSequence_main_region_state_prepare_r1_prepare_1() {
		exitSequence_main_region_state_prepare_r1_prepare_1_r1();
		exitSequence_main_region_state_prepare_r1_prepare_1_r2();
	}
	
	/* Default exit sequence for state set_dosette */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state crush_grain */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r1_crush_grain() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state set_sachet */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_sachet() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state judge_cup */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state put_cup */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r1_put_cup() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state heat_water */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r2_heat_water() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state perpare_2 */
	private void exitSequence_main_region_state_prepare_r1_perpare_2() {
		exitSequence_main_region_state_prepare_r1_perpare_2_r1();
		exitSequence_main_region_state_prepare_r1_perpare_2_r2();
	}
	
	/* Default exit sequence for state tamp_grain */
	private void exitSequence_main_region_state_prepare_r1_perpare_2_r1_tamp_grain() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state wait_heat */
	private void exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state judge_cup */
	private void exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup() {
		nextStateIndex = 2;
		stateVector[2] = State.$NullState$;
	}
	
	/* Default exit sequence for state put_cup */
	private void exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup() {
		nextStateIndex = 2;
		stateVector[2] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_2 */
	private void exitSequence_main_region_state_prepare_r1_state_2() {
		exitSequence_main_region_state_prepare_r1_state_2_r1();
		exitSequence_main_region_state_prepare_r1_state_2_r2();
		exitSequence_main_region_state_prepare_r1_state_2_r3();
	}
	
	/* Default exit sequence for state wait_heat */
	private void exitSequence_main_region_state_prepare_r1_state_2_r1_wait_heat() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state set_soup */
	private void exitSequence_main_region_state_prepare_r1_state_2_r2_set_soup() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state add_spice */
	private void exitSequence_main_region_state_prepare_r1_state_2_r3_add_spice() {
		nextStateIndex = 2;
		stateVector[2] = State.$NullState$;
	}
	
	/* Default exit sequence for state state_3 */
	private void exitSequence_main_region_state_prepare_r1_state_3() {
		exitSequence_main_region_state_prepare_r1_state_3_r1();
		exitSequence_main_region_state_prepare_r1_state_3_r2();
	}
	
	/* Default exit sequence for state wait_hot */
	private void exitSequence_main_region_state_prepare_r1_state_3_r1_wait_hot() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state judge_cup */
	private void exitSequence_main_region_state_prepare_r1_state_3_r2_judge_cup() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state put_cup */
	private void exitSequence_main_region_state_prepare_r1_state_3_r2_put_cup() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state wait_infusion */
	private void exitSequence_main_region_state_prepare_r1_wait_infusion() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state withdraw_sachet */
	private void exitSequence_main_region_state_prepare_r1_withdraw_sachet() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_withdraw_sachet();
	}
	
	/* Default exit sequence for state lock_door */
	private void exitSequence_main_region_state_prepare_r1_lock_door() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_lock_door();
	}
	
	/* Default exit sequence for state inject_N2 */
	private void exitSequence_main_region_state_prepare_r1_inject_N2() {
		exitSequence_main_region_state_prepare_r1_inject_N2_r1();
	}
	
	/* Default exit sequence for state entry/raise */
	private void exitSequence_main_region_state_prepare_r1_inject_N2_r1_entry_raise() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_inject_N2_r1_entry_raise();
	}
	
	/* Default exit sequence for state inject_shortTime */
	private void exitSequence_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime();
	}
	
	/* Default exit sequence for state judge_Time */
	private void exitSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state open_door */
	private void exitSequence_main_region_state_prepare_r1_open_door() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_open_door();
	}
	
	/* Default exit sequence for state prepare_3 */
	private void exitSequence_main_region_state_prepare_r1_prepare_3() {
		exitSequence_main_region_state_prepare_r1_prepare_3_r1();
		exitSequence_main_region_state_prepare_r1_prepare_3_r2();
	}
	
	/* Default exit sequence for state add_sugar */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state if_add_sirop */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state add_sirop */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sirop() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state judgeMoney1 */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
	}
	
	/* Default exit sequence for state add_water */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r2_add_water() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state if_add_milk */
	private void exitSequence_main_region_state_prepare_r1_if_add_milk() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state add_milk */
	private void exitSequence_main_region_state_prepare_r1_add_milk() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_add_milk();
	}
	
	/* Default exit sequence for state add_soup_water */
	private void exitSequence_main_region_state_prepare_r1_add_soup_water() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_add_soup_water();
	}
	
	/* Default exit sequence for state if_add_croutons */
	private void exitSequence_main_region_state_prepare_r1_if_add_croutons() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state add_Croutons */
	private void exitSequence_main_region_state_prepare_r1_add_Croutons() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_add_Croutons();
	}
	
	/* Default exit sequence for state if_add_iceCream */
	private void exitSequence_main_region_state_prepare_r1_if_add_iceCream() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state add_iceCream */
	private void exitSequence_main_region_state_prepare_r1_add_iceCream() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_add_iceCream();
	}
	
	/* Default exit sequence for state judgeMoney2 */
	private void exitSequence_main_region_state_prepare_r1_judgeMoney2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_judgeMoney2();
	}
	
	/* Default exit sequence for state judgeMoney3 */
	private void exitSequence_main_region_state_prepare_r1_judgeMoney3() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_judgeMoney3();
	}
	
	/* Default exit sequence for state judgeMoney4 */
	private void exitSequence_main_region_state_prepare_r1_judgeMoney4() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_prepare_r1_judgeMoney4();
	}
	
	/* Default exit sequence for state state_reset */
	private void exitSequence_main_region_state_reset() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_reset();
	}
	
	/* Default exit sequence for state state_refund */
	private void exitSequence_main_region_state_refund() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_state_refund();
	}
	
	/* Default exit sequence for state judge_returnCoinsOrCancleBank */
	private void exitSequence_main_region_judge_returnCoinsOrCancleBank() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state CancleBankTransaction */
	private void exitSequence_main_region_CancleBankTransaction() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state cancleOrder */
	private void exitSequence_main_region_cancleOrder() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_cancleOrder();
	}
	
	/* Default exit sequence for state judge_ifReturnCoins */
	private void exitSequence_main_region_judge_ifReturnCoins() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state clean_machine */
	private void exitSequence_main_region_clean_machine() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
		
		exitAction_main_region_clean_machine();
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		switch (stateVector[0]) {
		case main_region_state_choose_addcup_state1:
			exitSequence_main_region_state_choose_addcup_state1();
			break;
		case main_region_state_prepare_r1_state_judgeType:
			exitSequence_main_region_state_prepare_r1_state_judgeType();
			break;
		case main_region_state_prepare_r1_wait_take:
			exitSequence_main_region_state_prepare_r1_wait_take();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_set_dosette:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_crush_grain:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_crush_grain();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_set_sachet:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_sachet();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_judge_cup:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_put_cup:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_put_cup();
			break;
		case main_region_state_prepare_r1_perpare_2_r1_tamp_grain:
			exitSequence_main_region_state_prepare_r1_perpare_2_r1_tamp_grain();
			break;
		case main_region_state_prepare_r1_state_2_r1_wait_heat:
			exitSequence_main_region_state_prepare_r1_state_2_r1_wait_heat();
			break;
		case main_region_state_prepare_r1_state_3_r1_wait_hot:
			exitSequence_main_region_state_prepare_r1_state_3_r1_wait_hot();
			break;
		case main_region_state_prepare_r1_wait_infusion:
			exitSequence_main_region_state_prepare_r1_wait_infusion();
			break;
		case main_region_state_prepare_r1_withdraw_sachet:
			exitSequence_main_region_state_prepare_r1_withdraw_sachet();
			break;
		case main_region_state_prepare_r1_lock_door:
			exitSequence_main_region_state_prepare_r1_lock_door();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_entry_raise:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_entry_raise();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_inject_shortTime:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_judge_Time:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time();
			break;
		case main_region_state_prepare_r1_open_door:
			exitSequence_main_region_state_prepare_r1_open_door();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_add_sugar:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_if_add_sirop:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_add_sirop:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sirop();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_judgeMoney1:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
			break;
		case main_region_state_prepare_r1_if_add_milk:
			exitSequence_main_region_state_prepare_r1_if_add_milk();
			break;
		case main_region_state_prepare_r1_add_milk:
			exitSequence_main_region_state_prepare_r1_add_milk();
			break;
		case main_region_state_prepare_r1_add_soup_water:
			exitSequence_main_region_state_prepare_r1_add_soup_water();
			break;
		case main_region_state_prepare_r1_if_add_croutons:
			exitSequence_main_region_state_prepare_r1_if_add_croutons();
			break;
		case main_region_state_prepare_r1_add_Croutons:
			exitSequence_main_region_state_prepare_r1_add_Croutons();
			break;
		case main_region_state_prepare_r1_if_add_iceCream:
			exitSequence_main_region_state_prepare_r1_if_add_iceCream();
			break;
		case main_region_state_prepare_r1_add_iceCream:
			exitSequence_main_region_state_prepare_r1_add_iceCream();
			break;
		case main_region_state_prepare_r1_judgeMoney2:
			exitSequence_main_region_state_prepare_r1_judgeMoney2();
			break;
		case main_region_state_prepare_r1_judgeMoney3:
			exitSequence_main_region_state_prepare_r1_judgeMoney3();
			break;
		case main_region_state_prepare_r1_judgeMoney4:
			exitSequence_main_region_state_prepare_r1_judgeMoney4();
			break;
		case main_region_state_reset:
			exitSequence_main_region_state_reset();
			break;
		case main_region_state_refund:
			exitSequence_main_region_state_refund();
			break;
		case main_region_judge_returnCoinsOrCancleBank:
			exitSequence_main_region_judge_returnCoinsOrCancleBank();
			break;
		case main_region_CancleBankTransaction:
			exitSequence_main_region_CancleBankTransaction();
			break;
		case main_region_cancleOrder:
			exitSequence_main_region_cancleOrder();
			break;
		case main_region_judge_ifReturnCoins:
			exitSequence_main_region_judge_ifReturnCoins();
			break;
		case main_region_clean_machine:
			exitSequence_main_region_clean_machine();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case main_region_state_choose_ty_state_type:
			exitSequence_main_region_state_choose_ty_state_type();
			break;
		case main_region_state_choose_ty_state_type2:
			exitSequence_main_region_state_choose_ty_state_type2();
			break;
		case main_region_state_choose_ty_state_type3:
			exitSequence_main_region_state_choose_ty_state_type3();
			break;
		case main_region_state_choose_ty_state_initial:
			exitSequence_main_region_state_choose_ty_state_initial();
			break;
		case main_region_state_prepare_r1_prepare_1_r2_heat_water:
			exitSequence_main_region_state_prepare_r1_prepare_1_r2_heat_water();
			break;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat();
			break;
		case main_region_state_prepare_r1_state_2_r2_set_soup:
			exitSequence_main_region_state_prepare_r1_state_2_r2_set_soup();
			break;
		case main_region_state_prepare_r1_state_3_r2_judge_cup:
			exitSequence_main_region_state_prepare_r1_state_3_r2_judge_cup();
			break;
		case main_region_state_prepare_r1_state_3_r2_put_cup:
			exitSequence_main_region_state_prepare_r1_state_3_r2_put_cup();
			break;
		case main_region_state_prepare_r1_prepare_3_r2_add_water:
			exitSequence_main_region_state_prepare_r1_prepare_3_r2_add_water();
			break;
		default:
			break;
		}
		
		switch (stateVector[2]) {
		case main_region_state_choose_r2_state_sli1:
			exitSequence_main_region_state_choose_r2_state_sli1();
			break;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup();
			break;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup();
			break;
		case main_region_state_prepare_r1_state_2_r3_add_spice:
			exitSequence_main_region_state_prepare_r1_state_2_r3_add_spice();
			break;
		default:
			break;
		}
		
		switch (stateVector[3]) {
		case main_region_state_choose_r3_state_sli2:
			exitSequence_main_region_state_choose_r3_state_sli2();
			break;
		default:
			break;
		}
		
		switch (stateVector[4]) {
		case main_region_state_choose_r4_state_sli3:
			exitSequence_main_region_state_choose_r4_state_sli3();
			break;
		default:
			break;
		}
		
		switch (stateVector[5]) {
		case main_region_state_choose_r5_state_nfc1:
			exitSequence_main_region_state_choose_r5_state_nfc1();
			break;
		case main_region_state_choose_r5_state_nfc2:
			exitSequence_main_region_state_choose_r5_state_nfc2();
			break;
		case main_region_state_choose_r5_if_11_times:
			exitSequence_main_region_state_choose_r5_if_11_times();
			break;
		case main_region_state_choose_r5__11times:
			exitSequence_main_region_state_choose_r5__11times();
			break;
		default:
			break;
		}
		
		switch (stateVector[6]) {
		case main_region_state_choose_r6_state_caculate:
			exitSequence_main_region_state_choose_r6_state_caculate();
			break;
		default:
			break;
		}
		
		switch (stateVector[7]) {
		case main_region_state_choose_r7_state_resetTimer:
			exitSequence_main_region_state_choose_r7_state_resetTimer();
			break;
		case main_region_state_choose_r7_state_timer:
			exitSequence_main_region_state_choose_r7_state_timer();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region addcup */
	private void exitSequence_main_region_state_choose_addcup() {
		switch (stateVector[0]) {
		case main_region_state_choose_addcup_state1:
			exitSequence_main_region_state_choose_addcup_state1();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region ty */
	private void exitSequence_main_region_state_choose_ty() {
		switch (stateVector[1]) {
		case main_region_state_choose_ty_state_type:
			exitSequence_main_region_state_choose_ty_state_type();
			break;
		case main_region_state_choose_ty_state_type2:
			exitSequence_main_region_state_choose_ty_state_type2();
			break;
		case main_region_state_choose_ty_state_type3:
			exitSequence_main_region_state_choose_ty_state_type3();
			break;
		case main_region_state_choose_ty_state_initial:
			exitSequence_main_region_state_choose_ty_state_initial();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_choose_r2() {
		switch (stateVector[2]) {
		case main_region_state_choose_r2_state_sli1:
			exitSequence_main_region_state_choose_r2_state_sli1();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r3 */
	private void exitSequence_main_region_state_choose_r3() {
		switch (stateVector[3]) {
		case main_region_state_choose_r3_state_sli2:
			exitSequence_main_region_state_choose_r3_state_sli2();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r4 */
	private void exitSequence_main_region_state_choose_r4() {
		switch (stateVector[4]) {
		case main_region_state_choose_r4_state_sli3:
			exitSequence_main_region_state_choose_r4_state_sli3();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r5 */
	private void exitSequence_main_region_state_choose_r5() {
		switch (stateVector[5]) {
		case main_region_state_choose_r5_state_nfc1:
			exitSequence_main_region_state_choose_r5_state_nfc1();
			break;
		case main_region_state_choose_r5_state_nfc2:
			exitSequence_main_region_state_choose_r5_state_nfc2();
			break;
		case main_region_state_choose_r5_if_11_times:
			exitSequence_main_region_state_choose_r5_if_11_times();
			break;
		case main_region_state_choose_r5__11times:
			exitSequence_main_region_state_choose_r5__11times();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r6 */
	private void exitSequence_main_region_state_choose_r6() {
		switch (stateVector[6]) {
		case main_region_state_choose_r6_state_caculate:
			exitSequence_main_region_state_choose_r6_state_caculate();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r7 */
	private void exitSequence_main_region_state_choose_r7() {
		switch (stateVector[7]) {
		case main_region_state_choose_r7_state_resetTimer:
			exitSequence_main_region_state_choose_r7_state_resetTimer();
			break;
		case main_region_state_choose_r7_state_timer:
			exitSequence_main_region_state_choose_r7_state_timer();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_state_judgeType:
			exitSequence_main_region_state_prepare_r1_state_judgeType();
			break;
		case main_region_state_prepare_r1_wait_take:
			exitSequence_main_region_state_prepare_r1_wait_take();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_set_dosette:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_crush_grain:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_crush_grain();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_set_sachet:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_sachet();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_judge_cup:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_put_cup:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_put_cup();
			break;
		case main_region_state_prepare_r1_perpare_2_r1_tamp_grain:
			exitSequence_main_region_state_prepare_r1_perpare_2_r1_tamp_grain();
			break;
		case main_region_state_prepare_r1_state_2_r1_wait_heat:
			exitSequence_main_region_state_prepare_r1_state_2_r1_wait_heat();
			break;
		case main_region_state_prepare_r1_state_3_r1_wait_hot:
			exitSequence_main_region_state_prepare_r1_state_3_r1_wait_hot();
			break;
		case main_region_state_prepare_r1_wait_infusion:
			exitSequence_main_region_state_prepare_r1_wait_infusion();
			break;
		case main_region_state_prepare_r1_withdraw_sachet:
			exitSequence_main_region_state_prepare_r1_withdraw_sachet();
			break;
		case main_region_state_prepare_r1_lock_door:
			exitSequence_main_region_state_prepare_r1_lock_door();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_entry_raise:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_entry_raise();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_inject_shortTime:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_judge_Time:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time();
			break;
		case main_region_state_prepare_r1_open_door:
			exitSequence_main_region_state_prepare_r1_open_door();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_add_sugar:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_if_add_sirop:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_add_sirop:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sirop();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_judgeMoney1:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
			break;
		case main_region_state_prepare_r1_if_add_milk:
			exitSequence_main_region_state_prepare_r1_if_add_milk();
			break;
		case main_region_state_prepare_r1_add_milk:
			exitSequence_main_region_state_prepare_r1_add_milk();
			break;
		case main_region_state_prepare_r1_add_soup_water:
			exitSequence_main_region_state_prepare_r1_add_soup_water();
			break;
		case main_region_state_prepare_r1_if_add_croutons:
			exitSequence_main_region_state_prepare_r1_if_add_croutons();
			break;
		case main_region_state_prepare_r1_add_Croutons:
			exitSequence_main_region_state_prepare_r1_add_Croutons();
			break;
		case main_region_state_prepare_r1_if_add_iceCream:
			exitSequence_main_region_state_prepare_r1_if_add_iceCream();
			break;
		case main_region_state_prepare_r1_add_iceCream:
			exitSequence_main_region_state_prepare_r1_add_iceCream();
			break;
		case main_region_state_prepare_r1_judgeMoney2:
			exitSequence_main_region_state_prepare_r1_judgeMoney2();
			break;
		case main_region_state_prepare_r1_judgeMoney3:
			exitSequence_main_region_state_prepare_r1_judgeMoney3();
			break;
		case main_region_state_prepare_r1_judgeMoney4:
			exitSequence_main_region_state_prepare_r1_judgeMoney4();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case main_region_state_prepare_r1_prepare_1_r2_heat_water:
			exitSequence_main_region_state_prepare_r1_prepare_1_r2_heat_water();
			break;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat();
			break;
		case main_region_state_prepare_r1_state_2_r2_set_soup:
			exitSequence_main_region_state_prepare_r1_state_2_r2_set_soup();
			break;
		case main_region_state_prepare_r1_state_3_r2_judge_cup:
			exitSequence_main_region_state_prepare_r1_state_3_r2_judge_cup();
			break;
		case main_region_state_prepare_r1_state_3_r2_put_cup:
			exitSequence_main_region_state_prepare_r1_state_3_r2_put_cup();
			break;
		case main_region_state_prepare_r1_prepare_3_r2_add_water:
			exitSequence_main_region_state_prepare_r1_prepare_3_r2_add_water();
			break;
		default:
			break;
		}
		
		switch (stateVector[2]) {
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup();
			break;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup();
			break;
		case main_region_state_prepare_r1_state_2_r3_add_spice:
			exitSequence_main_region_state_prepare_r1_state_2_r3_add_spice();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_prepare_1_r1_set_dosette:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_crush_grain:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_crush_grain();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_set_sachet:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_set_sachet();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_judge_cup:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup();
			break;
		case main_region_state_prepare_r1_prepare_1_r1_put_cup:
			exitSequence_main_region_state_prepare_r1_prepare_1_r1_put_cup();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_prepare_r1_prepare_1_r2() {
		switch (stateVector[1]) {
		case main_region_state_prepare_r1_prepare_1_r2_heat_water:
			exitSequence_main_region_state_prepare_r1_prepare_1_r2_heat_water();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1_perpare_2_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_perpare_2_r1_tamp_grain:
			exitSequence_main_region_state_prepare_r1_perpare_2_r1_tamp_grain();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_prepare_r1_perpare_2_r2() {
		switch (stateVector[1]) {
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat();
			break;
		default:
			break;
		}
		
		switch (stateVector[2]) {
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup();
			break;
		case main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup:
			exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1_state_2_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_state_2_r1_wait_heat:
			exitSequence_main_region_state_prepare_r1_state_2_r1_wait_heat();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_prepare_r1_state_2_r2() {
		switch (stateVector[1]) {
		case main_region_state_prepare_r1_state_2_r2_set_soup:
			exitSequence_main_region_state_prepare_r1_state_2_r2_set_soup();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r3 */
	private void exitSequence_main_region_state_prepare_r1_state_2_r3() {
		switch (stateVector[2]) {
		case main_region_state_prepare_r1_state_2_r3_add_spice:
			exitSequence_main_region_state_prepare_r1_state_2_r3_add_spice();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1_state_3_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_state_3_r1_wait_hot:
			exitSequence_main_region_state_prepare_r1_state_3_r1_wait_hot();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_prepare_r1_state_3_r2() {
		switch (stateVector[1]) {
		case main_region_state_prepare_r1_state_3_r2_judge_cup:
			exitSequence_main_region_state_prepare_r1_state_3_r2_judge_cup();
			break;
		case main_region_state_prepare_r1_state_3_r2_put_cup:
			exitSequence_main_region_state_prepare_r1_state_3_r2_put_cup();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1_inject_N2_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_inject_N2_r1_entry_raise:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_entry_raise();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_inject_shortTime:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime();
			break;
		case main_region_state_prepare_r1_inject_N2_r1_judge_Time:
			exitSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r1() {
		switch (stateVector[0]) {
		case main_region_state_prepare_r1_prepare_3_r1_add_sugar:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_if_add_sirop:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_add_sirop:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_add_sirop();
			break;
		case main_region_state_prepare_r1_prepare_3_r1_judgeMoney1:
			exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_main_region_state_prepare_r1_prepare_3_r2() {
		switch (stateVector[1]) {
		case main_region_state_prepare_r1_prepare_3_r2_add_water:
			exitSequence_main_region_state_prepare_r1_prepare_3_r2_add_water();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		enterSequence_main_region_state_choose_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_addcup__entry_Default() {
		enterSequence_main_region_state_choose_addcup_state1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_ty__entry_Default() {
		enterSequence_main_region_state_choose_ty_state_initial_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_r2__entry_Default() {
		enterSequence_main_region_state_choose_r2_state_sli1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_r3__entry_Default() {
		enterSequence_main_region_state_choose_r3_state_sli2_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_r4__entry_Default() {
		enterSequence_main_region_state_choose_r4_state_sli3_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_r5__entry_Default() {
		enterSequence_main_region_state_choose_r5_state_nfc1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_r6__entry_Default() {
		enterSequence_main_region_state_choose_r6_state_caculate_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_choose_r7__entry_Default() {
		enterSequence_main_region_state_choose_r7_state_timer_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1__entry_Default() {
		enterSequence_main_region_state_prepare_r1_state_judgeType_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_prepare_1_r2__entry_Default() {
		enterSequence_main_region_state_prepare_r1_prepare_1_r2_heat_water_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_perpare_2_r2_state_1_r1__entry_Default() {
		enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_perpare_2_r2_state_1_r2__entry_Default() {
		enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_perpare_2_r2__entry_Default() {
		enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_state_2_r1__entry_Default() {
		enterSequence_main_region_state_prepare_r1_state_2_r1_wait_heat_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_state_2_r2__entry_Default() {
		enterSequence_main_region_state_prepare_r1_state_2_r2_set_soup_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_state_2_r3__entry_Default() {
		enterSequence_main_region_state_prepare_r1_state_2_r3_add_spice_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_state_3_r1__entry_Default() {
		enterSequence_main_region_state_prepare_r1_state_3_r1_wait_hot_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_state_3_r2__entry_Default() {
		enterSequence_main_region_state_prepare_r1_state_3_r2_judge_cup_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_inject_N2_r1__entry_Default() {
		enterSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_state_prepare_r1_prepare_3_r2__entry_Default() {
		enterSequence_main_region_state_prepare_r1_prepare_3_r2_add_water_default();
	}
	
	private boolean react() {
		return false;
	}
	
	private boolean main_region_state_choose_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.cancle_btn) {
				exitSequence_main_region_state_choose();
				enterSequence_main_region_cancleOrder_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_addcup_state1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.addCup_Btn) {
				exitSequence_main_region_state_choose_addcup_state1();
				sCInterface.raiseDoAddCup();
				
				enterSequence_main_region_state_choose_addcup_state1_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_ty_state_type_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.type1_btn) {
				exitSequence_main_region_state_choose_ty_state_type();
				enterSequence_main_region_state_choose_ty_state_type_default();
			} else {
				if (sCInterface.type2_btn) {
					exitSequence_main_region_state_choose_ty_state_type();
					sCInterface.raiseDoChangeSliderToSoup();
					
					enterSequence_main_region_state_choose_ty_state_type2_default();
				} else {
					if (sCInterface.type3_btn) {
						exitSequence_main_region_state_choose_ty_state_type();
						sCInterface.raiseDoChangeSliderToIcedTea();
						
						enterSequence_main_region_state_choose_ty_state_type3_default();
					} else {
						did_transition = false;
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_ty_state_type2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.type1_btn) {
				exitSequence_main_region_state_choose_ty_state_type2();
				sCInterface.raiseDoChangeSlider();
				
				enterSequence_main_region_state_choose_ty_state_type_default();
			} else {
				if (sCInterface.type3_btn) {
					exitSequence_main_region_state_choose_ty_state_type2();
					sCInterface.raiseDoChangeSliderToIcedTea1();
					
					enterSequence_main_region_state_choose_ty_state_type3_default();
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_ty_state_type3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.type2_btn) {
				exitSequence_main_region_state_choose_ty_state_type3();
				sCInterface.raiseDoChangeSliderToSoup1();
				
				enterSequence_main_region_state_choose_ty_state_type2_default();
			} else {
				if (sCInterface.type1_btn) {
					exitSequence_main_region_state_choose_ty_state_type3();
					sCInterface.raiseDoChangeSlider1();
					
					enterSequence_main_region_state_choose_ty_state_type_default();
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_ty_state_initial_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.type2_btn) {
				exitSequence_main_region_state_choose_ty_state_initial();
				sCInterface.raiseDoChangeSliderToSoup();
				
				enterSequence_main_region_state_choose_ty_state_type2_default();
			} else {
				if (sCInterface.type3_btn) {
					exitSequence_main_region_state_choose_ty_state_initial();
					sCInterface.raiseDoChangeSliderToIcedTea();
					
					enterSequence_main_region_state_choose_ty_state_type3_default();
				} else {
					if (sCInterface.type1_btn) {
						exitSequence_main_region_state_choose_ty_state_initial();
						enterSequence_main_region_state_choose_ty_state_type_default();
					} else {
						did_transition = false;
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r2_state_sli1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.sli1_btn) {
				exitSequence_main_region_state_choose_r2_state_sli1();
				sCInterface.raiseDoModify1();
				
				enterSequence_main_region_state_choose_r2_state_sli1_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r3_state_sli2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.sli2_btn) {
				exitSequence_main_region_state_choose_r3_state_sli2();
				sCInterface.raiseDoModify2();
				
				enterSequence_main_region_state_choose_r3_state_sli2_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r4_state_sli3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.sli3_btn) {
				exitSequence_main_region_state_choose_r4_state_sli3();
				sCInterface.raiseDoModify3();
				
				enterSequence_main_region_state_choose_r4_state_sli3_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r5_state_nfc1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.nfc_btn) {
				exitSequence_main_region_state_choose_r5_state_nfc1();
				sCInterface.raiseDoStoreInfo();
				
				enterSequence_main_region_state_choose_r5_if_11_times_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r5_state_nfc2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.prepare) {
				exitSequence_main_region_state_choose();
				enterSequence_main_region_state_prepare_default();
				react();
			} else {
				if (sCInterface.any_btn) {
					exitSequence_main_region_state_choose_r5_state_nfc2();
					enterSequence_main_region_state_choose_r5_state_nfc2_default();
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r5_if_11_times_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.n) {
				exitSequence_main_region_state_choose_r5_if_11_times();
				enterSequence_main_region_state_choose_r5_state_nfc2_default();
			} else {
				if (sCInterface.y) {
					exitSequence_main_region_state_choose_r5_if_11_times();
					enterSequence_main_region_state_choose_r5__11times_default();
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r5__11times_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[0]) {
				exitSequence_main_region_state_choose_r5__11times();
				enterSequence_main_region_state_choose_r5_state_nfc2_default();
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r6_state_caculate_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.prepare) {
				exitSequence_main_region_state_choose();
				enterSequence_main_region_state_prepare_default();
				react();
			} else {
				if (sCInterface.sli2_btn) {
					exitSequence_main_region_state_choose_r6_state_caculate();
					sCInterface.raiseDoChangePrice();
					
					enterSequence_main_region_state_choose_r6_state_caculate_default();
				} else {
					if (sCInterface.type1_btn) {
						exitSequence_main_region_state_choose_r6_state_caculate();
						sCInterface.raiseDoChangePrice();
						
						enterSequence_main_region_state_choose_r6_state_caculate_default();
					} else {
						if (sCInterface.type2_btn) {
							exitSequence_main_region_state_choose_r6_state_caculate();
							sCInterface.raiseDoChangePrice();
							
							enterSequence_main_region_state_choose_r6_state_caculate_default();
						} else {
							if (sCInterface.pay_coins) {
								exitSequence_main_region_state_choose_r6_state_caculate();
								sCInterface.raiseDoAddCoin();
								
								enterSequence_main_region_state_choose_r6_state_caculate_default();
							} else {
								if (sCInterface.type3_btn) {
									exitSequence_main_region_state_choose_r6_state_caculate();
									sCInterface.raiseDoChangePrice();
									
									enterSequence_main_region_state_choose_r6_state_caculate_default();
								} else {
									if (sCInterface.sli3_btn) {
										exitSequence_main_region_state_choose_r6_state_caculate();
										sCInterface.raiseDoChangePrice();
										
										enterSequence_main_region_state_choose_r6_state_caculate_default();
									} else {
										did_transition = false;
									}
								}
							}
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r7_state_resetTimer_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[1]) {
				exitSequence_main_region_state_choose();
				enterSequence_main_region_cancleOrder_default();
				react();
			} else {
				if (sCInterface.any_btn) {
					exitSequence_main_region_state_choose_r7_state_resetTimer();
					enterSequence_main_region_state_choose_r7_state_resetTimer_default();
					main_region_state_choose_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_choose_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_choose_r7_state_timer_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.any_btn) {
				exitSequence_main_region_state_choose_r7_state_timer();
				enterSequence_main_region_state_choose_r7_state_resetTimer_default();
				main_region_state_choose_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_choose_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_judgeType_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_coffee) {
				exitSequence_main_region_state_prepare_r1_state_judgeType();
				enterSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette_default();
				enterSequence_main_region_state_prepare_r1_prepare_1_r2_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.pr_expresso) {
					exitSequence_main_region_state_prepare_r1_state_judgeType();
					enterSequence_main_region_state_prepare_r1_prepare_1_r1_crush_grain_default();
					enterSequence_main_region_state_prepare_r1_prepare_1_r2_default();
					main_region_state_prepare_react(false);
				} else {
					if (sCInterface.pr_tea) {
						exitSequence_main_region_state_prepare_r1_state_judgeType();
						enterSequence_main_region_state_prepare_r1_prepare_1_r1_set_sachet_default();
						enterSequence_main_region_state_prepare_r1_prepare_1_r2_default();
						main_region_state_prepare_react(false);
					} else {
						if (sCInterface.pr_soup) {
							exitSequence_main_region_state_prepare_r1_state_judgeType();
							enterSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup_default();
							enterSequence_main_region_state_prepare_r1_prepare_1_r2_default();
							main_region_state_prepare_react(false);
						} else {
							if (sCInterface.pr_icedTea) {
								exitSequence_main_region_state_prepare_r1_state_judgeType();
								enterSequence_main_region_state_prepare_r1_prepare_1_r1_set_dosette_default();
								enterSequence_main_region_state_prepare_r1_prepare_1_r2_default();
								main_region_state_prepare_react(false);
							} else {
								did_transition = false;
							}
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_wait_take_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[2]) {
				exitSequence_main_region_state_prepare();
				enterSequence_main_region_clean_machine_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_r1_set_dosette_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_coffee) {
				exitSequence_main_region_state_prepare_r1_prepare_1();
				enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.pr_icedTea) {
					exitSequence_main_region_state_prepare_r1_prepare_1();
					enterSequence_main_region_state_prepare_r1_state_3_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_r1_crush_grain_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_expresso) {
				exitSequence_main_region_state_prepare_r1_prepare_1();
				enterSequence_main_region_state_prepare_r1_perpare_2_r1_tamp_grain_default();
				enterSequence_main_region_state_prepare_r1_perpare_2_r2_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_r1_set_sachet_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_tea) {
				exitSequence_main_region_state_prepare_r1_prepare_1();
				enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_r1_judge_cup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.needCup) {
				exitSequence_main_region_state_prepare_r1_prepare_1_r1_judge_cup();
				enterSequence_main_region_state_prepare_r1_prepare_1_r1_put_cup_default();
			} else {
				if (sCInterface.pr_soup) {
					exitSequence_main_region_state_prepare_r1_prepare_1();
					enterSequence_main_region_state_prepare_r1_state_2_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_r1_put_cup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_soup) {
				exitSequence_main_region_state_prepare_r1_prepare_1();
				enterSequence_main_region_state_prepare_r1_state_2_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_1_r2_heat_water_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_prepare_1_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_perpare_2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_perpare_2_r1_tamp_grain_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_perpare_2_r2_state_1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_perpare_2_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_perpare_2_r2_state_1_r1_wait_heat_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.needCup) {
				exitSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_judge_cup();
				enterSequence_main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup_default();
				main_region_state_prepare_r1_perpare_2_r2_state_1_react(false);
			} else {
				if (sCInterface.nextStep) {
					exitSequence_main_region_state_prepare_r1_perpare_2();
					enterSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop_default();
					enterSequence_main_region_state_prepare_r1_prepare_3_r2_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_perpare_2_r2_state_1_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_perpare_2_r2_state_1_r2_put_cup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.nextStep) {
				exitSequence_main_region_state_prepare_r1_perpare_2();
				enterSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop_default();
				enterSequence_main_region_state_prepare_r1_prepare_3_r2_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_perpare_2_r2_state_1_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.nextStep) {
				exitSequence_main_region_state_prepare_r1_state_2();
				enterSequence_main_region_state_prepare_r1_add_soup_water_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_2_r1_wait_heat_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_2_r2_set_soup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_2_r3_add_spice_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_state_2_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.nextStep) {
				exitSequence_main_region_state_prepare_r1_state_3();
				enterSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop_default();
				enterSequence_main_region_state_prepare_r1_prepare_3_r2_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_3_r1_wait_hot_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_3_r2_judge_cup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.needCup) {
				exitSequence_main_region_state_prepare_r1_state_3_r2_judge_cup();
				enterSequence_main_region_state_prepare_r1_state_3_r2_put_cup_default();
				main_region_state_prepare_r1_state_3_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_state_3_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_state_3_r2_put_cup_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_state_3_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_wait_infusion_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_tea) {
				exitSequence_main_region_state_prepare_r1_wait_infusion();
				enterSequence_main_region_state_prepare_r1_withdraw_sachet_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.pr_icedTea) {
					exitSequence_main_region_state_prepare_r1_wait_infusion();
					enterSequence_main_region_state_prepare_r1_lock_door_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_withdraw_sachet_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[3]) {
				exitSequence_main_region_state_prepare_r1_withdraw_sachet();
				enterSequence_main_region_state_prepare_r1_if_add_milk_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_lock_door_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[4]) {
				exitSequence_main_region_state_prepare_r1_lock_door();
				enterSequence_main_region_state_prepare_r1_inject_N2_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_inject_N2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_inject_N2_r1_entry_raise_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[5]) {
				exitSequence_main_region_state_prepare_r1_inject_N2();
				enterSequence_main_region_state_prepare_r1_open_door_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_inject_N2_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_inject_N2_r1_inject_shortTime_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[6]) {
				exitSequence_main_region_state_prepare_r1_inject_N2();
				enterSequence_main_region_state_prepare_r1_open_door_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_inject_N2_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_inject_N2_r1_judge_Time_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.longEvent) {
				exitSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time();
				enterSequence_main_region_state_prepare_r1_inject_N2_r1_entry_raise_default();
				main_region_state_prepare_r1_inject_N2_react(false);
			} else {
				if (sCInterface.shortEvent) {
					exitSequence_main_region_state_prepare_r1_inject_N2_r1_judge_Time();
					enterSequence_main_region_state_prepare_r1_inject_N2_r1_inject_shortTime_default();
					main_region_state_prepare_r1_inject_N2_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_inject_N2_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_open_door_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[7]) {
				exitSequence_main_region_state_prepare_r1_open_door();
				enterSequence_main_region_state_prepare_r1_wait_take_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pr_coffee) {
				exitSequence_main_region_state_prepare_r1_prepare_3();
				enterSequence_main_region_state_prepare_r1_if_add_iceCream_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.pr_expresso) {
					exitSequence_main_region_state_prepare_r1_prepare_3();
					enterSequence_main_region_state_prepare_r1_if_add_iceCream_default();
					main_region_state_prepare_react(false);
				} else {
					if (sCInterface.pr_tea) {
						exitSequence_main_region_state_prepare_r1_prepare_3();
						enterSequence_main_region_state_prepare_r1_wait_infusion_default();
						main_region_state_prepare_react(false);
					} else {
						if (sCInterface.pr_icedTea) {
							exitSequence_main_region_state_prepare_r1_prepare_3();
							enterSequence_main_region_state_prepare_r1_wait_infusion_default();
							main_region_state_prepare_react(false);
						} else {
							did_transition = false;
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_3_r1_add_sugar_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_3_r1_if_add_sirop_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.n) {
				exitSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop();
				enterSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar_default();
			} else {
				if (sCInterface.y) {
					exitSequence_main_region_state_prepare_r1_prepare_3_r1_if_add_sirop();
					enterSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1_default();
				} else {
					did_transition = false;
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_3_r1_add_sirop_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_3_r1_judgeMoney1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.enough) {
				exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
				enterSequence_main_region_state_prepare_r1_prepare_3_r1_add_sirop_default();
			} else {
				if (sCInterface.pay_coins) {
					exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
					enterSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1_default();
				} else {
					if (timeEvents[8]) {
						exitSequence_main_region_state_prepare_r1_prepare_3_r1_judgeMoney1();
						enterSequence_main_region_state_prepare_r1_prepare_3_r1_add_sugar_default();
					} else {
						did_transition = false;
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_prepare_3_r2_add_water_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_r1_prepare_3_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_if_add_milk_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.y) {
				exitSequence_main_region_state_prepare_r1_if_add_milk();
				enterSequence_main_region_state_prepare_r1_judgeMoney3_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.n) {
					exitSequence_main_region_state_prepare_r1_if_add_milk();
					enterSequence_main_region_state_prepare_r1_wait_take_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_add_milk_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[9]) {
				exitSequence_main_region_state_prepare_r1_add_milk();
				enterSequence_main_region_state_prepare_r1_wait_take_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_add_soup_water_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[10]) {
				exitSequence_main_region_state_prepare_r1_add_soup_water();
				enterSequence_main_region_state_prepare_r1_if_add_croutons_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_if_add_croutons_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.n) {
				exitSequence_main_region_state_prepare_r1_if_add_croutons();
				enterSequence_main_region_state_prepare_r1_wait_take_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.y) {
					exitSequence_main_region_state_prepare_r1_if_add_croutons();
					enterSequence_main_region_state_prepare_r1_judgeMoney4_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_add_Croutons_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[11]) {
				exitSequence_main_region_state_prepare_r1_add_Croutons();
				enterSequence_main_region_state_prepare_r1_wait_take_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_if_add_iceCream_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.n) {
				exitSequence_main_region_state_prepare_r1_if_add_iceCream();
				enterSequence_main_region_state_prepare_r1_if_add_milk_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.y) {
					exitSequence_main_region_state_prepare_r1_if_add_iceCream();
					enterSequence_main_region_state_prepare_r1_judgeMoney2_default();
					main_region_state_prepare_react(false);
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_add_iceCream_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[12]) {
				exitSequence_main_region_state_prepare_r1_add_iceCream();
				enterSequence_main_region_state_prepare_r1_if_add_milk_default();
				main_region_state_prepare_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_judgeMoney2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pay_coins) {
				exitSequence_main_region_state_prepare_r1_judgeMoney2();
				enterSequence_main_region_state_prepare_r1_judgeMoney2_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.enough) {
					exitSequence_main_region_state_prepare_r1_judgeMoney2();
					enterSequence_main_region_state_prepare_r1_add_iceCream_default();
					main_region_state_prepare_react(false);
				} else {
					if (timeEvents[13]) {
						exitSequence_main_region_state_prepare_r1_judgeMoney2();
						enterSequence_main_region_state_prepare_r1_if_add_milk_default();
						main_region_state_prepare_react(false);
					} else {
						did_transition = false;
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_judgeMoney3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.enough) {
				exitSequence_main_region_state_prepare_r1_judgeMoney3();
				enterSequence_main_region_state_prepare_r1_add_milk_default();
				main_region_state_prepare_react(false);
			} else {
				if (timeEvents[14]) {
					exitSequence_main_region_state_prepare_r1_judgeMoney3();
					enterSequence_main_region_state_prepare_r1_wait_take_default();
					main_region_state_prepare_react(false);
				} else {
					if (sCInterface.pay_coins) {
						exitSequence_main_region_state_prepare_r1_judgeMoney3();
						enterSequence_main_region_state_prepare_r1_judgeMoney3_default();
						main_region_state_prepare_react(false);
					} else {
						did_transition = false;
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_prepare_r1_judgeMoney4_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.pay_coins) {
				exitSequence_main_region_state_prepare_r1_judgeMoney4();
				enterSequence_main_region_state_prepare_r1_judgeMoney4_default();
				main_region_state_prepare_react(false);
			} else {
				if (sCInterface.enough) {
					exitSequence_main_region_state_prepare_r1_judgeMoney4();
					enterSequence_main_region_state_prepare_r1_add_Croutons_default();
					main_region_state_prepare_react(false);
				} else {
					if (timeEvents[15]) {
						exitSequence_main_region_state_prepare_r1_judgeMoney4();
						enterSequence_main_region_state_prepare_r1_wait_take_default();
						main_region_state_prepare_react(false);
					} else {
						did_transition = false;
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_state_prepare_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_state_reset_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[16]) {
				exitSequence_main_region_state_reset();
				enterSequence_main_region_state_choose_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_state_refund_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[17]) {
				exitSequence_main_region_state_refund();
				enterSequence_main_region_state_reset_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_judge_returnCoinsOrCancleBank_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.returnCoins) {
				exitSequence_main_region_judge_returnCoinsOrCancleBank();
				enterSequence_main_region_judge_ifReturnCoins_default();
				react();
			} else {
				if (sCInterface.cancleTransaction) {
					exitSequence_main_region_judge_returnCoinsOrCancleBank();
					enterSequence_main_region_CancleBankTransaction_default();
					react();
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_CancleBankTransaction_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.reset) {
				exitSequence_main_region_CancleBankTransaction();
				enterSequence_main_region_state_reset_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_cancleOrder_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[18]) {
				exitSequence_main_region_cancleOrder();
				enterSequence_main_region_judge_returnCoinsOrCancleBank_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_judge_ifReturnCoins_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (sCInterface.returnCoins) {
				exitSequence_main_region_judge_ifReturnCoins();
				enterSequence_main_region_state_refund_default();
				react();
			} else {
				if (sCInterface.reset) {
					exitSequence_main_region_judge_ifReturnCoins();
					enterSequence_main_region_state_reset_default();
					react();
				} else {
					did_transition = false;
				}
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_clean_machine_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[19]) {
				exitSequence_main_region_clean_machine();
				enterSequence_main_region_judge_ifReturnCoins_default();
				react();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
}
